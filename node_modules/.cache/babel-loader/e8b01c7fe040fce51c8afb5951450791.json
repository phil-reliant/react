{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\PostArchive\\\\index.js\";\n// NOTE:: This page may be passed in `searchTerm` which will filter results. It can also be passed in\n// `category`, which will limit posts by category\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport GlobalConstants from '../../GlobalConstants';\nimport ArchiveList from './ArchiveList';\nimport BlogHeaderImage from '../../assets/images/blog-lander-header@2x.jpg';\nimport PostSidebar from '../SinglePost/PostSidebar';\nimport SidebarSignup from '../SinglePost/SidebarSignup';\nimport SideBars9 from \"../../assets/images/side-bars-9.png\";\nimport { GetCategoryFriendlyName } from '../../utils/CategoryHelpers';\nimport { CATEGORY_QUERY_PARTIAL } from '../../queries/GetCategories';\n\nconst PostArchive = props => {\n  const baseClass = `template-archive-post`;\n  const {\n    searchTerm,\n    category\n  } = props;\n  const headerStyles = {\n    backgroundImage: `url('${BlogHeaderImage}')`,\n    backgroundSize: `cover`,\n    backgroundPosition: `center center`,\n    backgroundRepeat: `no-repeat`\n  };\n  const CATEGORY_QUERY = gql`${CATEGORY_QUERY_PARTIAL}`;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: baseClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__header`,\n    style: headerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: `side-bars`,\n    src: SideBars9,\n    alt: \"Side Bars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__header__inner container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, // if a category slug was provided, then search for the friendly name to display as the title,\n  // otherwise lookup the global option for the blogArchiveTitle and show that instead\n  category ? /*#__PURE__*/React.createElement(Query, {\n    query: CATEGORY_QUERY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    let pageTitle = category;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }\n      });\n    }\n\n    if (error) {\n      console.error('PostArchive unable to get category friendly name!');\n    } else {\n      pageTitle = GetCategoryFriendlyName(data.categories, category);\n    }\n\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      className: `${baseClass}__title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, pageTitle);\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: `${baseClass}__title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, GlobalConstants.pageTitlesAndCopy.blogArchive.title))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__inner container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__post-archive-list col-lg-8`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArchiveList, {\n    searchTerm: searchTerm,\n    category: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__sidebar-container col-lg-4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(PostSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__post-archive-modile-signup col-12`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(SidebarSignup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default PostArchive;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/PostArchive/index.js"],"names":["React","Query","gql","ErrorBoundary","GlobalConstants","ArchiveList","BlogHeaderImage","PostSidebar","SidebarSignup","SideBars9","GetCategoryFriendlyName","CATEGORY_QUERY_PARTIAL","PostArchive","props","baseClass","searchTerm","category","headerStyles","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","CATEGORY_QUERY","loading","error","data","pageTitle","console","categories","pageTitlesAndCopy","blogArchive","title"],"mappings":"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","sourcesContent":["// NOTE:: This page may be passed in `searchTerm` which will filter results. It can also be passed in\n// `category`, which will limit posts by category\n\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport GlobalConstants from '../../GlobalConstants';\nimport ArchiveList from './ArchiveList';\nimport BlogHeaderImage from '../../assets/images/blog-lander-header@2x.jpg';\nimport PostSidebar from '../SinglePost/PostSidebar';\nimport SidebarSignup from '../SinglePost/SidebarSignup';\nimport SideBars9 from \"../../assets/images/side-bars-9.png\";\nimport { GetCategoryFriendlyName } from '../../utils/CategoryHelpers';\nimport { CATEGORY_QUERY_PARTIAL } from '../../queries/GetCategories';\n\nconst PostArchive = props => {\n\tconst baseClass = `template-archive-post`;\n\tconst {\n\t\tsearchTerm,\n\t\tcategory\n\t} = props;\n\n\tconst headerStyles = {\n\t\tbackgroundImage: `url('${BlogHeaderImage}')`,\n\t\tbackgroundSize: `cover`, \n\t\tbackgroundPosition: `center center`,\n\t\tbackgroundRepeat: `no-repeat`\n\t};\n\n\tconst CATEGORY_QUERY = gql`${CATEGORY_QUERY_PARTIAL}`;\n\n\treturn (\n\t\t<section className={baseClass}>\n\t\t\t<div className={`${baseClass}__header`} style={headerStyles}>\n\t\t\t\t<img className={`side-bars`} src={SideBars9} alt={\"Side Bars\"} />\n\t\t\t\t<div className={`${baseClass}__header__inner container`}>\n\t\t\t\t\t{\n\t\t\t\t\t\t// if a category slug was provided, then search for the friendly name to display as the title,\n\t\t\t\t\t\t// otherwise lookup the global option for the blogArchiveTitle and show that instead\n\t\t\t\t\t\tcategory ?\n\t\t\t\t\t\t\t<Query query={CATEGORY_QUERY}>\n\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\t\t\t\t\tlet pageTitle = category;\n\t\t\t\t\t\t\t\t\tif (loading) {\n\t\t\t\t\t\t\t\t\t\treturn <p></p>;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\t\tconsole.error('PostArchive unable to get category friendly name!');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpageTitle = GetCategoryFriendlyName(data.categories, category);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<h3 className={`${baseClass}__title`}>{pageTitle}</h3>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</Query>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<h3 className={`${baseClass}__title`}>{GlobalConstants.pageTitlesAndCopy.blogArchive.title}</h3>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={`${baseClass}__inner container`}>\n\t\t\t\t<div className={`row`}>\n\t\t\t\t\t<div className={`${baseClass}__post-archive-list col-lg-8`}>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<ArchiveList searchTerm={searchTerm} category={category} />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`${baseClass}__sidebar-container col-lg-4`}>\n\t\t\t\t\t\t<PostSidebar />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={`row`}>\n\t\t\t\t\t<div className={`${baseClass}__post-archive-modile-signup col-12`}>\n\t\t\t\t\t\t<SidebarSignup />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default PostArchive;\n"]},"metadata":{},"sourceType":"module"}