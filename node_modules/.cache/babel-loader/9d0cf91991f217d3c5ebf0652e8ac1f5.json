{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Fileupload\\\\GFDropzone.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nfunction Accept({\n  dropzoneText,\n  ...props\n}) {\n  const {\n    field\n  } = props;\n  const {\n    defaultValue\n  } = field || [];\n  const [files, setFiles] = useState(defaultValue ? [defaultValue] : []);\n  const [cssClass, setcssClass] = useState('dropzone');\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: event => {\n      const {\n        id,\n        field,\n        updateForm,\n        setTouched,\n        unsetError\n      } = props;\n      setFiles(event.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n      updateForm(event, field);\n      setTouched(id);\n      unsetError(id);\n    },\n    onDragOver: event => {\n      setcssClass('dropzone over');\n    },\n    onDragLeave: event => {\n      setcssClass('dropzone');\n    },\n    onDropAccepted: event => {\n      setcssClass('dropzone');\n    }\n  });\n  const thumbs = files && !!files.length > 0 && files.map(file => /*#__PURE__*/React.createElement(\"div\", {\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"file preview\",\n    src: file.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n  const {\n    id,\n    formID,\n    isRequired\n  } = props;\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  const text = dropzoneText || 'Drag \\'n\\' drop some files here, or click to select files';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: cssClass\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    id: `input_${formID}_${id}`,\n    name: `input_${id}`,\n    type: \"file\",\n    required: isRequired\n  }, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), thumbs && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }\n  }, thumbs), /*#__PURE__*/React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: text\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Accept;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Fileupload/GFDropzone.jsx"],"names":["React","useEffect","useState","useDropzone","Accept","dropzoneText","props","field","defaultValue","files","setFiles","cssClass","setcssClass","getRootProps","getInputProps","accept","onDrop","event","id","updateForm","setTouched","unsetError","map","file","Object","assign","preview","URL","createObjectURL","onDragOver","onDragLeave","onDropAccepted","thumbs","length","name","formID","isRequired","forEach","revokeObjectURL","text","className","__html"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nfunction Accept({ dropzoneText, ...props }) {\n  const { field } = props;\n  const { defaultValue } = field || [];\n  const [files, setFiles] = useState(defaultValue ? [defaultValue] : []);\n  const [cssClass, setcssClass] = useState('dropzone');\n  const {\n getRootProps, getInputProps, \n} = useDropzone({\n    accept: 'image/*',\n    onDrop: (event) => {\n      const {\n id, field, updateForm, setTouched, unsetError \n} = props;\n      setFiles(\n        event.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),),\n      );\n      updateForm(event, field);\n      setTouched(id);\n      unsetError(id);\n    },\n    onDragOver: (event) => {\n      setcssClass('dropzone over');\n    },\n    onDragLeave: (event) => {\n      setcssClass('dropzone');\n    },\n    onDropAccepted: (event) => {\n      setcssClass('dropzone');\n    },\n  });\n\n  const thumbs =    files\n    && !!files.length > 0\n    && files.map(file => (\n      <div key={file.name}>\n        <div>\n          <img alt=\"file preview\" src={file.preview} />\n        </div>\n      </div>\n    ));\n  const { id, formID, isRequired } = props;\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    },\n    [files],\n  );\n\n  const text = dropzoneText || 'Drag \\'n\\' drop some files here, or click to select files';\n\n  return (\n    <div className=\"container\">\n      <div\n        {...getRootProps({\n          className: cssClass,\n        })}\n      >\n        <input\n          id={`input_${formID}_${id}`}\n          name={`input_${id}`}\n          type=\"file\"\n          required={isRequired}\n          {...getInputProps()}\n        />\n        {thumbs && <div className=\"preview\">{thumbs}</div>}\n        <p dangerouslySetInnerHTML={{ __html: text }} />\n      </div>\n    </div>\n  );\n}\n\nexport default Accept;\n"]},"metadata":{},"sourceType":"module"}