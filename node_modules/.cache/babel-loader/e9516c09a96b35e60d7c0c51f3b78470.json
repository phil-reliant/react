{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\PostArchive\\\\ArchiveList.js\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport ArchiveListContent from './ArchiveListContent';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport SEO_QUERY_PARTIAL from '../../queries/SEOQuery';\nimport { useQuery } from '@apollo/react-hooks';\nconst POST_ARCHIVE_QUERY = gql`\n\tquery POST_ARCHIVE_QUERY($after:String!, $search:String!, $category:String!) {\n\t\tposts(after: $after, first: 10, where: { categoryName: $category, search: $search }) {\n\t\t\tnodes {\n\t\t\t\ttitle\n\t\t\t\tfeaturedImage {\n\t\t\t\t\tsrcSet\n\t\t\t\t\ttitle\n\t\t\t\t\taltText\n\t\t\t\t\tmediaItemUrl\n\t\t\t\t}\n\t\t\t\tlink\n\t\t\t\texcerpt\n\t\t\t\t${SEO_QUERY_PARTIAL}\n\t\t\t\tcategories {\n\t\t\t\t\tedges {\n\t\t\t\t\t  node {\n\t\t\t\t\t\tname\n\t\t\t\t\t  }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\thasNextPage\n\t\t\t\tendCursor\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst PostArchive = props => {\n  const {\n    searchTerm\n  } = props;\n  const {\n    category\n  } = props;\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(POST_ARCHIVE_QUERY, {\n    variables: {\n      after: \"\",\n      search: searchTerm || \"\",\n      category: category || \"\"\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (error) {\n    console.error('ArchiveList error', error);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, \"Error loading ArchiveList\");\n  }\n\n  if (!data.posts) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }\n  }, \"No posts found.\");\n  const {\n    hasNextPage,\n    endCursor\n  } = data.posts.pageInfo;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ArchiveListContent, Object.assign({}, data.posts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }))), hasNextPage ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      fetchMore({\n        variables: {\n          after: endCursor,\n          search: searchTerm || \"\"\n        },\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          if (!fetchMoreResult) return prev;\n          return { ...fetchMoreResult,\n            posts: { ...fetchMoreResult.posts,\n              nodes: [...prev.posts.nodes, ...fetchMoreResult.posts.nodes]\n            }\n          };\n        }\n      });\n    },\n    className: `template-archive-post__load-more`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Load More\") : null);\n};\n\nexport default PostArchive;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/PostArchive/ArchiveList.js"],"names":["React","gql","ArchiveListContent","ErrorBoundary","LoadingSpinner","SEO_QUERY_PARTIAL","useQuery","POST_ARCHIVE_QUERY","PostArchive","props","searchTerm","category","loading","error","data","fetchMore","variables","after","search","console","posts","hasNextPage","endCursor","pageInfo","updateQuery","prev","fetchMoreResult","nodes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,kBAAkB,GAAGN,GAAI;;;;;;;;;;;;;MAazBI,iBAAkB;;;;;;;;;;;;;;;CAbxB;;AA8BA,MAAMG,WAAW,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,KAArB;AAEA,QAAM;AACLG,IAAAA,OADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA,IAHK;AAILC,IAAAA;AAJK,MAKFT,QAAQ,CAACC,kBAAD,EAAqB;AAChCS,IAAAA,SAAS,EAAE;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,MAAM,EAAER,UAAU,IAAI,EAFZ;AAGVC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAHZ;AADqB,GAArB,CALZ;;AAaA,MAAIC,OAAJ,EAAa;AACZ,wBAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACD,MAAIC,KAAJ,EAAW;AACVM,IAAAA,OAAO,CAACN,KAAR,CAAc,mBAAd,EAAmCA,KAAnC;AACA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD;AAGA;;AACD,MAAI,CAACC,IAAI,CAACM,KAAV,EAAiB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAEjB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BR,IAAI,CAACM,KAAL,CAAWG,QAA9C;AAEA,sBACC,uDACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,kBAAD,oBACKT,IAAI,CAACM,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADD,EAMGC,WAAW,gBACZ;AACC,IAAA,OAAO,EAAE,MAAM;AACdN,MAAAA,SAAS,CAAC;AACTC,QAAAA,SAAS,EAAE;AACVC,UAAAA,KAAK,EAAEK,SADG;AAEVJ,UAAAA,MAAM,EAAER,UAAU,IAAI;AAFZ,SADF;AAKTc,QAAAA,WAAW,EAAE,CAACC,IAAD,EAAO;AAAEC,UAAAA;AAAF,SAAP,KAA+B;AAC3C,cAAI,CAACA,eAAL,EAAsB,OAAOD,IAAP;AACtB,iBAAO,EACN,GAAGC,eADG;AAENN,YAAAA,KAAK,EAAE,EACN,GAAGM,eAAe,CAACN,KADb;AAENO,cAAAA,KAAK,EAAE,CACN,GAAGF,IAAI,CAACL,KAAL,CAAWO,KADR,EAEN,GAAGD,eAAe,CAACN,KAAhB,CAAsBO,KAFnB;AAFD;AAFD,WAAP;AAUA;AAjBQ,OAAD,CAAT;AAmBA,KArBF;AAsBC,IAAA,SAAS,EAAG,kCAtBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADY,GA2BT,IAjCL,CADD;AAqCA,CAnED;;AAqEA,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport ArchiveListContent from './ArchiveListContent';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport SEO_QUERY_PARTIAL from '../../queries/SEOQuery';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst POST_ARCHIVE_QUERY = gql`\n\tquery POST_ARCHIVE_QUERY($after:String!, $search:String!, $category:String!) {\n\t\tposts(after: $after, first: 10, where: { categoryName: $category, search: $search }) {\n\t\t\tnodes {\n\t\t\t\ttitle\n\t\t\t\tfeaturedImage {\n\t\t\t\t\tsrcSet\n\t\t\t\t\ttitle\n\t\t\t\t\taltText\n\t\t\t\t\tmediaItemUrl\n\t\t\t\t}\n\t\t\t\tlink\n\t\t\t\texcerpt\n\t\t\t\t${SEO_QUERY_PARTIAL}\n\t\t\t\tcategories {\n\t\t\t\t\tedges {\n\t\t\t\t\t  node {\n\t\t\t\t\t\tname\n\t\t\t\t\t  }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\thasNextPage\n\t\t\t\tendCursor\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst PostArchive = props => {\n\tconst { searchTerm } = props;\n\tconst { category } = props;\n\n\tconst {\n\t\tloading,\n\t\terror,\n\t\tdata,\n\t\tfetchMore\n\t} = useQuery(POST_ARCHIVE_QUERY, {\n\t\tvariables: {\n\t\t\tafter: \"\",\n\t\t\tsearch: searchTerm || \"\",\n\t\t\tcategory: category || \"\"\n\t\t}\n\t});\n\n\tif (loading) {\n\t\treturn <LoadingSpinner />\n\t}\n\tif (error) {\n\t\tconsole.error('ArchiveList error', error);\n\t\treturn (\n\t\t\t<p>Error loading ArchiveList</p>\n\t\t);\n\t}\n\tif (!data.posts) return <p>No posts found.</p>;\n\n\tconst { hasNextPage, endCursor } = data.posts.pageInfo;\n\n\treturn (\n\t\t<>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<ArchiveListContent\n\t\t\t\t\t{...data.posts}\n\t\t\t\t/>\n\t\t\t</ErrorBoundary>\n\t\t\t{ hasNextPage ? (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tfetchMore({\n\t\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\t\tafter: endCursor,\n\t\t\t\t\t\t\t\tsearch: searchTerm || \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tupdateQuery: (prev, { fetchMoreResult }) => {\n\t\t\t\t\t\t\t\tif (!fetchMoreResult) return prev;\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...fetchMoreResult,\n\t\t\t\t\t\t\t\t\tposts: {\n\t\t\t\t\t\t\t\t\t\t...fetchMoreResult.posts,\n\t\t\t\t\t\t\t\t\t\tnodes: [\n\t\t\t\t\t\t\t\t\t\t\t...prev.posts.nodes,\n\t\t\t\t\t\t\t\t\t\t\t...fetchMoreResult.posts.nodes\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={`template-archive-post__load-more`}\n\t\t\t\t>\n\t\t\t\t\tLoad More\n\t\t\t\t</button>\n\t\t\t) : null }\n\t\t</>\n\t);\n}\n\nexport default PostArchive;\n"]},"metadata":{},"sourceType":"module"}