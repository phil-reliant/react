{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Html.jsx\";\nimport React from \"react\"; // eslint-disable-next-line\n\nexport default (({\n  field,\n  saveStateToHtmlField,\n  hideField,\n  styledComponents\n}) => {\n  let {\n    content,\n    cssClass,\n    width\n  } = field; // only for UAF project\n  // you can remove it\n  // here I collect valus based on GF field class and save it to the HTML field\n\n  if (saveStateToHtmlField) {\n    const {\n      saveStateToHtmlField: states,\n      formValues\n    } = saveStateToHtmlField;\n    const classes = Object.keys(states);\n    const values = [];\n\n    if (classes) {\n      for (const id in formValues) {\n        const field = formValues[id];\n\n        for (let y = 0; y < classes.length; y++) {\n          if (field.cssClass.indexOf(classes[y]) !== -1 && !field.valid) {\n            values[states[classes[y]]] = field.value;\n          }\n        }\n      }\n    }\n\n    if (values) {\n      const replacedValues = Object.keys(values);\n\n      for (let i = 0; i < replacedValues.length; i++) {\n        if (replacedValues[i] === \"%price%\") {\n          values[replacedValues[i]] = `€${values[replacedValues[i]]}`;\n        }\n\n        content = content.replace(replacedValues[i], values[replacedValues[i]]);\n      }\n    }\n  }\n\n  const {\n    Box = \"div\"\n  } = styledComponents || false;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line\n    React.createElement(Box, {\n      width: width,\n      className: `form-field ${cssClass}`,\n      style: {\n        display: hideField ? \"none\" : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"html-content\",\n      dangerouslySetInnerHTML: {\n        __html: content\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }))\n  );\n});","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Html.jsx"],"names":["React","field","saveStateToHtmlField","hideField","styledComponents","content","cssClass","width","states","formValues","classes","Object","keys","values","id","y","length","indexOf","valid","value","replacedValues","i","replace","Box","display","undefined","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,gBAAe,CAAC;AACfC,EAAAA,KADe;AAEfC,EAAAA,oBAFe;AAGfC,EAAAA,SAHe;AAIfC,EAAAA;AAJe,CAAD,KAKT;AACL,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BN,KAAnC,CADK,CAGL;AACA;AACA;;AACA,MAAIC,oBAAJ,EAA0B;AACzB,UAAM;AAAEA,MAAAA,oBAAoB,EAAEM,MAAxB;AAAgCC,MAAAA;AAAhC,QAA+CP,oBAArD;AACA,UAAMQ,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB;AACA,UAAMK,MAAM,GAAG,EAAf;;AACA,QAAIH,OAAJ,EAAa;AACZ,WAAK,MAAMI,EAAX,IAAiBL,UAAjB,EAA6B;AAC5B,cAAMR,KAAK,GAAGQ,UAAU,CAACK,EAAD,CAAxB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACM,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACxC,cAAId,KAAK,CAACK,QAAN,CAAeW,OAAf,CAAuBP,OAAO,CAACK,CAAD,CAA9B,MAAuC,CAAC,CAAxC,IAA6C,CAACd,KAAK,CAACiB,KAAxD,EAA+D;AAC9DL,YAAAA,MAAM,CAACL,MAAM,CAACE,OAAO,CAACK,CAAD,CAAR,CAAP,CAAN,GAA6Bd,KAAK,CAACkB,KAAnC;AACA;AACD;AACD;AACD;;AACD,QAAIN,MAAJ,EAAY;AACX,YAAMO,cAAc,GAAGT,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAvB;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACJ,MAAnC,EAA2CK,CAAC,EAA5C,EAAgD;AAC/C,YAAID,cAAc,CAACC,CAAD,CAAd,KAAsB,SAA1B,EAAqC;AACpCR,UAAAA,MAAM,CAACO,cAAc,CAACC,CAAD,CAAf,CAAN,GAA6B,IAAGR,MAAM,CAACO,cAAc,CAACC,CAAD,CAAf,CAAoB,EAA1D;AACA;;AACDhB,QAAAA,OAAO,GAAGA,OAAO,CAACiB,OAAR,CAAgBF,cAAc,CAACC,CAAD,CAA9B,EAAmCR,MAAM,CAACO,cAAc,CAACC,CAAD,CAAf,CAAzC,CAAV;AACA;AACD;AACD;;AAED,QAAM;AAAEE,IAAAA,GAAG,GAAG;AAAR,MAAkBnB,gBAAgB,IAAI,KAA5C;AAEA;AAAA;AACC;AACA,wBAAC,GAAD;AACC,MAAA,KAAK,EAAEG,KADR;AAEC,MAAA,SAAS,EAAG,cAAaD,QAAS,EAFnC;AAGC,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAErB,SAAS,GAAG,MAAH,GAAYsB;AAAhC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKC;AACC,MAAA,SAAS,EAAC,cADX;AAEC,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAErB;AAAV,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD;AAFD;AAaA,CAnDD","sourcesContent":["import React from \"react\";\n\n// eslint-disable-next-line\nexport default ({\n\tfield,\n\tsaveStateToHtmlField,\n\thideField,\n\tstyledComponents\n}) => {\n\tlet { content, cssClass, width } = field;\n\n\t// only for UAF project\n\t// you can remove it\n\t// here I collect valus based on GF field class and save it to the HTML field\n\tif (saveStateToHtmlField) {\n\t\tconst { saveStateToHtmlField: states, formValues } = saveStateToHtmlField;\n\t\tconst classes = Object.keys(states);\n\t\tconst values = [];\n\t\tif (classes) {\n\t\t\tfor (const id in formValues) {\n\t\t\t\tconst field = formValues[id];\n\t\t\t\tfor (let y = 0; y < classes.length; y++) {\n\t\t\t\t\tif (field.cssClass.indexOf(classes[y]) !== -1 && !field.valid) {\n\t\t\t\t\t\tvalues[states[classes[y]]] = field.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (values) {\n\t\t\tconst replacedValues = Object.keys(values);\n\t\t\tfor (let i = 0; i < replacedValues.length; i++) {\n\t\t\t\tif (replacedValues[i] === \"%price%\") {\n\t\t\t\t\tvalues[replacedValues[i]] = `€${values[replacedValues[i]]}`;\n\t\t\t\t}\n\t\t\t\tcontent = content.replace(replacedValues[i], values[replacedValues[i]]);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst { Box = \"div\" } = styledComponents || false;\n\n\treturn (\n\t\t// eslint-disable-next-line\n\t\t<Box\n\t\t\twidth={width}\n\t\t\tclassName={`form-field ${cssClass}`}\n\t\t\tstyle={{ display: hideField ? \"none\" : undefined }}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"html-content\"\n\t\t\t\tdangerouslySetInnerHTML={{ __html: content }}\n\t\t\t/>\n\t\t</Box>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}