{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Text.jsx\";\nimport React from 'react';\nexport default (({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n  setFocusClass,\n  cssClass,\n  setCurrentFocus,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    placeholder,\n    isRequired,\n    maxLength,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName\n  } = field;\n  const {\n    Input = 'input',\n    Label = 'label',\n    Box = 'div'\n  } = styledComponents || false;\n\n  if (touched) {\n    cssClass += ' touched ';\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    width: width,\n    className: validationMessage && touched || error ? `form-field error ${cssClass}` : `form-field ${cssClass}`,\n    style: {\n      display: hideField ? 'none' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: `input_${formId}_${id}`,\n    className: `gf-label ${labelPlacement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, label), descriptionPlacement === 'above' && description ? description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: `input_${formId}_${id}`,\n    name: customName || `input_${id}`,\n    type: type,\n    value: !value ? '' : value,\n    placeholder: placeholder,\n    maxLength: maxLength,\n    required: isRequired,\n    onChange: event => {\n      updateForm(event, field);\n      unsetError(id);\n    },\n    onBlur: event => {\n      updateForm(event, field);\n      setTouched(id);\n      setFocusClass(value !== '');\n      setCurrentFocus(false);\n    },\n    onFocus: () => {\n      setFocusClass(true);\n      setCurrentFocus(true);\n    },\n    \"aria-label\": label,\n    \"aria-describedby\": `error_${formId}_${id}`,\n    \"aria-invalid\": !!validationMessage && touched || !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, description)), (validationMessage && touched || error) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    id: `error_${formId}_${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, validationMessage || error)));\n});","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Text.jsx"],"names":["React","field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","setFocusClass","cssClass","setCurrentFocus","props","id","formId","type","label","placeholder","isRequired","maxLength","description","descriptionPlacement","labelPlacement","width","customName","Input","Label","Box","display","undefined","event"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default ({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n  setFocusClass,\n  cssClass,\n  setCurrentFocus,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n\tplaceholder,\n    isRequired,\n    maxLength,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName,\n  } = field;\n  const { Input = 'input', Label = 'label', Box = 'div' } = styledComponents || false;\n  if(touched) {\n    cssClass += ' touched ';\n  }\n  return (\n    <Box\n      width={width}\n      className={\n        (validationMessage && touched) || error\n          ? `form-field error ${cssClass}`\n          : `form-field ${cssClass}`\n      }\n      style={{ display: hideField ? 'none' : undefined }}\n    >\n      <div className={type}>\n        <Label htmlFor={`input_${formId}_${id}`} className={`gf-label ${labelPlacement}`}>\n          {label}\n        </Label>\n        {descriptionPlacement === 'above' && description ? (\n          description && <div className=\"description\"></div>\n        ) : (\n          <React.Fragment>\n            <Input\n              id={`input_${formId}_${id}`}\n              name={customName || `input_${id}`}\n              type={type}\n              value={!value ? '' : value}\n\t\t\t  placeholder={placeholder}\n              maxLength={maxLength}\n              required={isRequired}\n              onChange={(event) => {\n                updateForm(event, field);\n                unsetError(id);\n              }}\n              onBlur={(event) => {\n                updateForm(event, field);\n                setTouched(id);\n                setFocusClass(value !== '');\n                setCurrentFocus(false);\n              }}\n              onFocus={() => {\n                setFocusClass(true);\n                setCurrentFocus(true);\n              }}\n              aria-label={label}\n              aria-describedby={`error_${formId}_${id}`}\n              aria-invalid={(!!validationMessage && touched) || !!error}\n            />\n            {description && <div className=\"description\">{description}</div>}\n          </React.Fragment>\n        )}\n        {((validationMessage && touched) || error) && (\n          <span className=\"error-message\" id={`error_${formId}_${id}`}>\n            {validationMessage || error}\n          </span>\n        )}\n      </div>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}