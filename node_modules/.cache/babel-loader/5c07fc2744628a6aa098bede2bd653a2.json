{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\ResourceArchive\\\\ResourceSection.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport ErrorBoundary from \"../../components/ErrorBoundary\";\nimport ResourceItem from './ResourceItem';\nimport { MakeGenericResourceFromResourceNode } from './ResourceUtilities';\nimport * as ResourceConstants from './ResourceConstants';\n\nconst ResourceSection = ({\n  resourceType,\n  resourceData,\n  onShowAllOfResourceType\n}) => {\n  // console.log('resourceData', resourceData);\n  if (!resourceData || resourceData.length === 0) {\n    console.warn(`ResourceSection for ${resourceType} found 0 results, hiding section.`);\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const baseClass = `resource-section`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass} container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-12`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${baseClass}__header`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }\n  }, \"Featured \", resourceType.PluralName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `row ${baseClass}__results-wrapper`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n    message: `Unable to load resources`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, resourceData.map((node, index) => {\n    const genericResource = MakeGenericResourceFromResourceNode(node, resourceType, \"\", false);\n    return /*#__PURE__*/React.createElement(ResourceItem, {\n      key: `ri-${index}`,\n      title: genericResource.title,\n      date: genericResource.date,\n      excerpt: genericResource.excerpt,\n      featuredImage: genericResource.featuredImage,\n      tagListing: genericResource.tagListing,\n      resourceDownloadUrl: genericResource.resourceDownloadUrl,\n      resourceType: genericResource.resourceType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-12`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, // If we have any resources then we'll show a 'See All' link\n  // If it is for blogs, that link redirects to the blog VS adjusting the resource type filter for other types\n  resourceData && resourceData.length > 0 ? resourceType.PostType === ResourceConstants.Articles.PostType ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/blog\",\n    className: `${baseClass}__load-more`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"See All \", resourceType.PluralName) : /*#__PURE__*/React.createElement(\"button\", {\n    className: `${baseClass}__load-more`,\n    onClick: () => {\n      onShowAllOfResourceType(resourceType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"See All \", resourceType.PluralName) : /*#__PURE__*/React.createElement(React.Fragment, null))));\n};\n\nexport default ResourceSection;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/ResourceArchive/ResourceSection.js"],"names":["React","Link","ErrorBoundary","ResourceItem","MakeGenericResourceFromResourceNode","ResourceConstants","ResourceSection","resourceType","resourceData","onShowAllOfResourceType","length","console","warn","baseClass","PluralName","map","node","index","genericResource","title","date","excerpt","featuredImage","tagListing","resourceDownloadUrl","PostType","Articles"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport ErrorBoundary from \"../../components/ErrorBoundary\";\nimport ResourceItem from './ResourceItem';\nimport { MakeGenericResourceFromResourceNode } from './ResourceUtilities';\nimport * as ResourceConstants from './ResourceConstants';\n\nconst ResourceSection = ({\n\tresourceType,\n\tresourceData,\n\tonShowAllOfResourceType\n}) => {\n\n\t// console.log('resourceData', resourceData);\n\n\tif (!resourceData || resourceData.length === 0) {\n\t\tconsole.warn(`ResourceSection for ${resourceType} found 0 results, hiding section.`);\n\t\treturn <></>\n\t}\n\n\tconst baseClass = `resource-section`;\n\treturn (\n\t\t<div className={`${baseClass} container`}>\n\t\t\t<div className={`row`}>\n\t\t\t\t<div className={`col-12`}>\n\t\t\t\t\t<h5 className={`${baseClass}__header`}>Featured {resourceType.PluralName}</h5>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className={`row ${baseClass}__results-wrapper`}>\n\t\t\t\t<ErrorBoundary message={`Unable to load resources`}>\n\t\t\t\t\t{\n\t\t\t\t\t\tresourceData.map((node, index) => {\n\t\t\t\t\t\t\tconst genericResource = MakeGenericResourceFromResourceNode(node, resourceType, \"\", false);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ResourceItem\n\t\t\t\t\t\t\t\t\tkey={`ri-${index}`}\n\t\t\t\t\t\t\t\t\ttitle={genericResource.title}\n\t\t\t\t\t\t\t\t\tdate={genericResource.date}\n\t\t\t\t\t\t\t\t\texcerpt={genericResource.excerpt}\n\t\t\t\t\t\t\t\t\tfeaturedImage={genericResource.featuredImage}\n\t\t\t\t\t\t\t\t\ttagListing={genericResource.tagListing}\n\t\t\t\t\t\t\t\t\tresourceDownloadUrl={genericResource.resourceDownloadUrl}\n\t\t\t\t\t\t\t\t\tresourceType={genericResource.resourceType} \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</ErrorBoundary>\n\t\t\t</div>\n\t\t\t<div className={`row`}>\n\t\t\t\t<div className={`col-12`}>\n\t\t\t\t\t{\n\t\t\t\t\t\t// If we have any resources then we'll show a 'See All' link\n\t\t\t\t\t\t// If it is for blogs, that link redirects to the blog VS adjusting the resource type filter for other types\n\t\t\t\t\t\t(resourceData && resourceData.length > 0) ?\n\t\t\t\t\t\t\t(resourceType.PostType === ResourceConstants.Articles.PostType) ?\n\t\t\t\t\t\t\t\t<Link to=\"/blog\"\n\t\t\t\t\t\t\t\t\tclassName={`${baseClass}__load-more`}>\n\t\t\t\t\t\t\t\t\t\tSee All {resourceType.PluralName}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${baseClass}__load-more`}\n\t\t\t\t\t\t\t\t\tonClick={() => {onShowAllOfResourceType(resourceType)}}>\n\t\t\t\t\t\t\t\t\tSee All {resourceType.PluralName}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ResourceSection;\n"]},"metadata":{},"sourceType":"module"}