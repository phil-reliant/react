{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Radio.jsx\";\nimport React, { Component } from \"react\";\n\nfunction formatMoney(amount, decimalCount = 2, decimal = \".\", thousands = \",\") {\n  try {\n    decimalCount = Math.abs(decimalCount);\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n    const negativeSign = amount < 0 ? \"-\" : \"\";\n    const i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n    const j = i.length > 3 ? i.length % 3 : 0;\n    return negativeSign + (j ? i.substr(0, j) + thousands : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, `$1${thousands}`) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n  } catch (e) {}\n}\n\nclass Radio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      otherValue: false,\n      inputValue: false\n    };\n\n    this.onFocus = e => {\n      let {\n        value\n      } = e.target;\n      const {\n        otherValue\n      } = this.state;\n\n      if (otherValue === value) {\n        value = \"\";\n      }\n\n      this.otherRadio.click();\n      this.otherRadio.checked = true;\n      this.setState({\n        inputValue: value\n      });\n    };\n\n    this.onBlur = e => {\n      const {\n        value\n      } = e.target;\n\n      if (value.replace(\" \", \"\") === \"\") {\n        this.setState({\n          inputValue: this.state.otherValue\n        });\n        this.otherRadio.checked = false;\n      } else {\n        this.setState({\n          inputValue: formatMoney(value)\n        });\n      }\n    };\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        inputValue: value\n      });\n    };\n\n    this.setFocus = e => {\n      this.otherChoise.focus();\n    };\n  }\n\n  render() {\n    const {\n      field,\n      value,\n      validationMessage,\n      touched,\n      setTouched,\n      updateForm,\n      hideField,\n      styledComponents,\n      error,\n      unsetError\n    } = this.props;\n    const {\n      id,\n      formId,\n      type,\n      label,\n      cssClass,\n      isRequired,\n      choices,\n      description,\n      descriptionPlacement,\n      labelPlacement,\n      width,\n      customName,\n      otherPlaceholder\n    } = field;\n    const {\n      inputValue\n    } = this.state;\n    const {\n      Radiogroup = \"fieldset\",\n      Label = \"legend\",\n      Box = \"div\",\n      Input = \"input\"\n    } = styledComponents || false;\n    return /*#__PURE__*/React.createElement(Box, {\n      width: width,\n      className: validationMessage && touched || error ? `form-field error ${cssClass}` : `form-field ${cssClass}`,\n      style: {\n        display: hideField ? \"none\" : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Radiogroup, {\n      className: \"radios\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      as: \"legend\",\n      className: `group-label ${labelPlacement}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, label, isRequired ? /*#__PURE__*/React.createElement(\"abbr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    }, \"*\") : null), descriptionPlacement === \"above\" && description ? description && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }\n    }, description) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, choices.map((choice, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: type,\n      key: choice.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: `input_${formId}_${id}_${i}`,\n      type: \"radio\",\n      name: customName || `input_${id}`,\n      value: choice.value,\n      checked: value === choice.value,\n      onChange: event => {\n        updateForm(event, field);\n        setTouched(id);\n        unsetError(id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: `input_${formId}_${id}_${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, choice.text))), field.enableOtherChoice && /*#__PURE__*/React.createElement(\"div\", {\n      className: `${type} other-choise`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: `input_${formId}_${id}_${choices.length}`,\n      type: \"radio\",\n      name: `input_${id}`,\n      value: inputValue,\n      onChange: event => {\n        updateForm(event, field);\n        setTouched(id);\n        unsetError(id);\n      },\n      ref: e => this.otherRadio = e,\n      onFocus: e => this.setFocus(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      id: `input_${formId}_${id}_${choices.length}_other`,\n      type: \"text\",\n      placeholder: otherPlaceholder || \"Other\",\n      value: inputValue || \"\",\n      onFocus: e => this.onFocus(e),\n      onBlur: e => {\n        updateForm(e, field);\n        this.onBlur(e);\n      },\n      onChange: e => {\n        // updateForm(e, field);\n        // setTouched(id);\n        this.onChange(e);\n        unsetError(id);\n      },\n      ref: e => this.otherChoise = e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    })), description && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 31\n      }\n    }, description))), (validationMessage && touched || error) && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-message\",\n      id: `error_${formId}_${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, validationMessage || error));\n  }\n\n}\n\nexport default Radio;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Radio.jsx"],"names":["React","Component","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","e","Radio","state","otherValue","inputValue","onFocus","value","target","otherRadio","click","checked","setState","onBlur","onChange","setFocus","otherChoise","focus","render","field","validationMessage","touched","setTouched","updateForm","hideField","styledComponents","error","unsetError","props","id","formId","type","label","cssClass","isRequired","choices","description","descriptionPlacement","labelPlacement","width","customName","otherPlaceholder","Radiogroup","Label","Box","Input","display","undefined","map","choice","event","text","enableOtherChoice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,YAAY,GAAG,CAA5C,EAA+CC,OAAO,GAAG,GAAzD,EAA8DC,SAAS,GAAG,GAA1E,EAA+E;AAC7E,MAAI;AACFF,IAAAA,YAAY,GAAGG,IAAI,CAACC,GAAL,CAASJ,YAAT,CAAf;AACAA,IAAAA,YAAY,GAAGK,KAAK,CAACL,YAAD,CAAL,GAAsB,CAAtB,GAA0BA,YAAzC;AAEA,UAAMM,YAAY,GAAGP,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,EAAxC;AAEA,UAAMQ,CAAC,GAAGC,QAAQ,CACfT,MAAM,GAAGI,IAAI,CAACC,GAAL,CAASK,MAAM,CAACV,MAAD,CAAN,IAAkB,CAA3B,EAA8BW,OAA9B,CAAsCV,YAAtC,CADM,CAAR,CAERW,QAFQ,EAAV;AAGA,UAAMC,CAAC,GAAGL,CAAC,CAACM,MAAF,GAAW,CAAX,GAAeN,CAAC,CAACM,MAAF,GAAW,CAA1B,GAA8B,CAAxC;AAEA,WACEP,YAAY,IACXM,CAAC,GAAGL,CAAC,CAACO,MAAF,CAAS,CAAT,EAAYF,CAAZ,IAAiBV,SAApB,GAAgC,EADtB,CAAZ,GAEAK,CAAC,CAACO,MAAF,CAASF,CAAT,EAAYG,OAAZ,CAAoB,gBAApB,EAAuC,KAAIb,SAAU,EAArD,CAFA,IAGCF,YAAY,GACTC,OAAO,GACPE,IAAI,CAACC,GAAL,CAASL,MAAM,GAAGQ,CAAlB,EACGG,OADH,CACWV,YADX,EAEGgB,KAFH,CAES,CAFT,CAFS,GAKT,EARJ,CADF;AAWD,GAtBD,CAsBE,OAAOC,CAAP,EAAU,CACX;AACF;;AAED,MAAMC,KAAN,SAAoBrB,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BsB,KAD4B,GACpB;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,UAAU,EAAE;AAFN,KADoB;;AAAA,SAM5BC,OAN4B,GAMlBL,CAAC,IAAI;AACb,UAAI;AAAEM,QAAAA;AAAF,UAAYN,CAAC,CAACO,MAAlB;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAiB,KAAKD,KAA5B;;AAEA,UAAIC,UAAU,KAAKG,KAAnB,EAA0B;AACxBA,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,WAAKE,UAAL,CAAgBC,KAAhB;AACA,WAAKD,UAAL,CAAgBE,OAAhB,GAA0B,IAA1B;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAEE;AAAd,OAAd;AACD,KAhB2B;;AAAA,SAkB5BM,MAlB4B,GAkBnBZ,CAAC,IAAI;AACZ,YAAM;AAAEM,QAAAA;AAAF,UAAYN,CAAC,CAACO,MAApB;;AACA,UAAID,KAAK,CAACR,OAAN,CAAc,GAAd,EAAmB,EAAnB,MAA2B,EAA/B,EAAmC;AACjC,aAAKa,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC;AAAzB,SAAd;AACA,aAAKK,UAAL,CAAgBE,OAAhB,GAA0B,KAA1B;AACD,OAHD,MAGO;AACL,aAAKC,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAEvB,WAAW,CAACyB,KAAD;AAAzB,SAAd;AACD;AACF,KA1B2B;;AAAA,SA4B5BO,QA5B4B,GA4BjBb,CAAC,IAAI;AACd,YAAM;AAAEM,QAAAA;AAAF,UAAYN,CAAC,CAACO,MAApB;AAEA,WAAKI,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAEE;AAAd,OAAd;AACD,KAhC2B;;AAAA,SAkC5BQ,QAlC4B,GAkCjBd,CAAC,IAAI;AACd,WAAKe,WAAL,CAAiBC,KAAjB;AACD,KApC2B;AAAA;;AAsC5BC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,KADI;AAEJZ,MAAAA,KAFI;AAGJa,MAAAA,iBAHI;AAIJC,MAAAA,OAJI;AAKJC,MAAAA,UALI;AAMJC,MAAAA,UANI;AAOJC,MAAAA,SAPI;AAQJC,MAAAA,gBARI;AASJC,MAAAA,KATI;AAUJC,MAAAA;AAVI,QAWF,KAAKC,KAXT;AAYA,UAAM;AACJC,MAAAA,EADI;AAEJC,MAAAA,MAFI;AAGJC,MAAAA,IAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,QALI;AAMJC,MAAAA,UANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA,oBATI;AAUJC,MAAAA,cAVI;AAWJC,MAAAA,KAXI;AAYJC,MAAAA,UAZI;AAaJC,MAAAA;AAbI,QAcFtB,KAdJ;AAeA,UAAM;AAAEd,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AAEA,UAAM;AACJuC,MAAAA,UAAU,GAAG,UADT;AAEJC,MAAAA,KAAK,GAAG,QAFJ;AAGJC,MAAAA,GAAG,GAAG,KAHF;AAIJC,MAAAA,KAAK,GAAG;AAJJ,QAKFpB,gBAAgB,IAAI,KALxB;AAOA,wBACE,oBAAC,GAAD;AACE,MAAA,KAAK,EAAEc,KADT;AAEE,MAAA,SAAS,EACNnB,iBAAiB,IAAIC,OAAtB,IAAkCK,KAAlC,GACK,oBAAmBO,QAAS,EADjC,GAEK,cAAaA,QAAS,EAL/B;AAOE,MAAA,KAAK,EAAE;AAAEa,QAAAA,OAAO,EAAEtB,SAAS,GAAG,MAAH,GAAYuB;AAAhC,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,SAAS,EAAG,eAAcT,cAAe,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,KADH,EAEGE,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH,GAAoB,IAFjC,CADF,EAKGG,oBAAoB,KAAK,OAAzB,IAAoCD,WAApC,GACCA,WAAW,iBAAI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BA,WAA9B,CADhB,gBAGC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACa,GAAR,CAAY,CAACC,MAAD,EAAS1D,CAAT,kBACX;AAAK,MAAA,SAAS,EAAEwC,IAAhB;AAAsB,MAAA,GAAG,EAAEkB,MAAM,CAAC1C,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAG,SAAQuB,MAAO,IAAGD,EAAG,IAAGtC,CAAE,EADjC;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAEiD,UAAU,IAAK,SAAQX,EAAG,EAHlC;AAIE,MAAA,KAAK,EAAEoB,MAAM,CAAC1C,KAJhB;AAKE,MAAA,OAAO,EAAEA,KAAK,KAAK0C,MAAM,CAAC1C,KAL5B;AAME,MAAA,QAAQ,EAAE2C,KAAK,IAAI;AACjB3B,QAAAA,UAAU,CAAC2B,KAAD,EAAQ/B,KAAR,CAAV;AACAG,QAAAA,UAAU,CAACO,EAAD,CAAV;AACAF,QAAAA,UAAU,CAACE,EAAD,CAAV;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAaE;AAAO,MAAA,OAAO,EAAG,SAAQC,MAAO,IAAGD,EAAG,IAAGtC,CAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG0D,MAAM,CAACE,IADV,CAbF,CADD,CADH,EAoBGhC,KAAK,CAACiC,iBAAN,iBACC;AAAK,MAAA,SAAS,EAAG,GAAErB,IAAK,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAG,SAAQD,MAAO,IAAGD,EAAG,IAAGM,OAAO,CAACtC,MAAO,EAD9C;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAG,SAAQgC,EAAG,EAHpB;AAIE,MAAA,KAAK,EAAExB,UAJT;AAKE,MAAA,QAAQ,EAAE6C,KAAK,IAAI;AACjB3B,QAAAA,UAAU,CAAC2B,KAAD,EAAQ/B,KAAR,CAAV;AACAG,QAAAA,UAAU,CAACO,EAAD,CAAV;AACAF,QAAAA,UAAU,CAACE,EAAD,CAAV;AACD,OATH;AAUE,MAAA,GAAG,EAAE5B,CAAC,IAAK,KAAKQ,UAAL,GAAkBR,CAV/B;AAWE,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKc,QAAL,CAAcd,CAAd,CAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAcE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAG,SAAQ6B,MAAO,IAAGD,EAAG,IAAGM,OAAO,CAACtC,MAAO,QAD9C;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAE4C,gBAAgB,IAAI,OAHnC;AAIE,MAAA,KAAK,EAAEpC,UAAU,IAAI,EAJvB;AAKE,MAAA,OAAO,EAAEJ,CAAC,IAAI,KAAKK,OAAL,CAAaL,CAAb,CALhB;AAME,MAAA,MAAM,EAAEA,CAAC,IAAI;AACXsB,QAAAA,UAAU,CAACtB,CAAD,EAAIkB,KAAJ,CAAV;AACA,aAAKN,MAAL,CAAYZ,CAAZ;AACD,OATH;AAUE,MAAA,QAAQ,EAAEA,CAAC,IAAI;AACb;AACA;AACA,aAAKa,QAAL,CAAcb,CAAd;AACA0B,QAAAA,UAAU,CAACE,EAAD,CAAV;AACD,OAfH;AAgBE,MAAA,GAAG,EAAE5B,CAAC,IAAK,KAAKe,WAAL,GAAmBf,CAhBhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CArBJ,EAuDGmC,WAAW,iBAAI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BA,WAA9B,CAvDlB,CARJ,CATF,EA4EG,CAAEhB,iBAAiB,IAAIC,OAAtB,IAAkCK,KAAnC,kBACC;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,EAAE,EAAG,SAAQI,MAAO,IAAGD,EAAG,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,iBAAiB,IAAIM,KADxB,CA7EJ,CADF;AAoFD;;AA/J2B;;AAkK9B,eAAexB,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nfunction formatMoney(amount, decimalCount = 2, decimal = \".\", thousands = \",\") {\n  try {\n    decimalCount = Math.abs(decimalCount);\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n    const negativeSign = amount < 0 ? \"-\" : \"\";\n\n    const i = parseInt(\n      (amount = Math.abs(Number(amount) || 0).toFixed(decimalCount))\n    ).toString();\n    const j = i.length > 3 ? i.length % 3 : 0;\n\n    return (\n      negativeSign +\n      (j ? i.substr(0, j) + thousands : \"\") +\n      i.substr(j).replace(/(\\d{3})(?=\\d)/g, `$1${thousands}`) +\n      (decimalCount\n        ? decimal +\n          Math.abs(amount - i)\n            .toFixed(decimalCount)\n            .slice(2)\n        : \"\")\n    );\n  } catch (e) {\n  }\n}\n\nclass Radio extends Component {\n  state = {\n    otherValue: false,\n    inputValue: false\n  };\n\n  onFocus = e => {\n    let { value } = e.target;\n    const { otherValue } = this.state;\n\n    if (otherValue === value) {\n      value = \"\";\n    }\n    this.otherRadio.click();\n    this.otherRadio.checked = true;\n    this.setState({ inputValue: value });\n  };\n\n  onBlur = e => {\n    const { value } = e.target;\n    if (value.replace(\" \", \"\") === \"\") {\n      this.setState({ inputValue: this.state.otherValue });\n      this.otherRadio.checked = false;\n    } else {\n      this.setState({ inputValue: formatMoney(value) });\n    }\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n\n    this.setState({ inputValue: value });\n  };\n\n  setFocus = e => {\n    this.otherChoise.focus();\n  };\n\n  render() {\n    const {\n      field,\n      value,\n      validationMessage,\n      touched,\n      setTouched,\n      updateForm,\n      hideField,\n      styledComponents,\n      error,\n      unsetError\n    } = this.props;\n    const {\n      id,\n      formId,\n      type,\n      label,\n      cssClass,\n      isRequired,\n      choices,\n      description,\n      descriptionPlacement,\n      labelPlacement,\n      width,\n      customName,\n      otherPlaceholder\n    } = field;\n    const { inputValue } = this.state;\n\n    const {\n      Radiogroup = \"fieldset\",\n      Label = \"legend\",\n      Box = \"div\",\n      Input = \"input\"\n    } = styledComponents || false;\n\n    return (\n      <Box\n        width={width}\n        className={\n          (validationMessage && touched) || error\n            ? `form-field error ${cssClass}`\n            : `form-field ${cssClass}`\n        }\n        style={{ display: hideField ? \"none\" : undefined }}\n      >\n        <Radiogroup className=\"radios\">\n          <Label as=\"legend\" className={`group-label ${labelPlacement}`}>\n            {label}\n            {isRequired ? <abbr>*</abbr> : null}\n          </Label>\n          {descriptionPlacement === \"above\" && description ? (\n            description && <div className=\"description\">{description}</div>\n          ) : (\n            <React.Fragment>\n              {choices.map((choice, i) => (\n                <div className={type} key={choice.value}>\n                  <input\n                    id={`input_${formId}_${id}_${i}`}\n                    type=\"radio\"\n                    name={customName || `input_${id}`}\n                    value={choice.value}\n                    checked={value === choice.value}\n                    onChange={event => {\n                      updateForm(event, field);\n                      setTouched(id);\n                      unsetError(id);\n                    }}\n                  />\n                  <label htmlFor={`input_${formId}_${id}_${i}`}>\n                    {choice.text}\n                  </label>\n                </div>\n              ))}\n              {field.enableOtherChoice && (\n                <div className={`${type} other-choise`}>\n                  <input\n                    id={`input_${formId}_${id}_${choices.length}`}\n                    type=\"radio\"\n                    name={`input_${id}`}\n                    value={inputValue}\n                    onChange={event => {\n                      updateForm(event, field);\n                      setTouched(id);\n                      unsetError(id);\n                    }}\n                    ref={e => (this.otherRadio = e)}\n                    onFocus={e => this.setFocus(e)}\n                  />\n                  <Input\n                    id={`input_${formId}_${id}_${choices.length}_other`}\n                    type=\"text\"\n                    placeholder={otherPlaceholder || \"Other\"}\n                    value={inputValue || \"\"}\n                    onFocus={e => this.onFocus(e)}\n                    onBlur={e => {\n                      updateForm(e, field);\n                      this.onBlur(e);\n                    }}\n                    onChange={e => {\n                      // updateForm(e, field);\n                      // setTouched(id);\n                      this.onChange(e);\n                      unsetError(id);\n                    }}\n                    ref={e => (this.otherChoise = e)}\n                  />\n                </div>\n              )}\n              {description && <div className=\"description\">{description}</div>}\n            </React.Fragment>\n          )}\n        </Radiogroup>\n        {((validationMessage && touched) || error) && (\n          <span className=\"error-message\" id={`error_${formId}_${id}`}>\n            {validationMessage || error}\n          </span>\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default Radio;\n"]},"metadata":{},"sourceType":"module"}