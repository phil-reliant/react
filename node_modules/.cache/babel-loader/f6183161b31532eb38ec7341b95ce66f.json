{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\ResourceArchive\\\\VideoEmbed.js\";\nimport React, { useState } from \"react\";\nimport ArrowNoStem from '../../assets/svgs/arrow-no-stem';\nimport CircleCloseButton from '../../assets/svgs/circle-close-button';\nimport YouTube from 'react-youtube';\n\nconst VideoEmbed = ({\n  imageOverlay,\n  ytVideoId\n}) => {\n  const [showVideoModal, setShowVideoModal] = useState(false);\n  const ytOptions = {}; // in case we ever need to provide youtube options for the embed\n  // where we will store the YouTube player reference once it's ready\n\n  let ytPlayerRef = null;\n\n  const playerReady = event => {\n    // when the player is ready we store off the reference to the player so we can play it when needed\n    ytPlayerRef = event.target;\n    ytPlayerRef.playVideo();\n  };\n\n  const playVideo = () => {\n    setShowVideoModal(true);\n  };\n\n  const closeVideoModal = () => {\n    setShowVideoModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `video-embed`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, imageOverlay && imageOverlay.mediaItemUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    id: \"videoImageOverlay\",\n    src: imageOverlay.mediaItemUrl,\n    alt: imageOverlay.altText,\n    onClick: () => playVideo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `video-embed__arrows`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => playVideo(),\n    className: `arrow-right`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArrowNoStem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }))), showVideoModal ? /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay',\n    onClick: closeVideoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay__wrapper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay__wrapper__close-button',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircleCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay__wrapper__player',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(YouTube, {\n    id: ytVideoId,\n    className: \"video-overlay__wrapper__player__ytembed\",\n    videoId: ytVideoId,\n    opts: ytOptions,\n    onReady: playerReady,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default VideoEmbed;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/ResourceArchive/VideoEmbed.js"],"names":["React","useState","ArrowNoStem","CircleCloseButton","YouTube","VideoEmbed","imageOverlay","ytVideoId","showVideoModal","setShowVideoModal","ytOptions","ytPlayerRef","playerReady","event","target","playVideo","closeVideoModal","mediaItemUrl","altText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AAEnD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMS,SAAS,GAAG,EAAlB,CAHmD,CAG5B;AAEvB;;AACA,MAAIC,WAAW,GAAG,IAAlB;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC9B;AACAF,IAAAA,WAAW,GAAGE,KAAK,CAACC,MAApB;AACAH,IAAAA,WAAW,CAACI,SAAZ;AACA,GAJD;;AAMA,QAAMA,SAAS,GAAG,MAAM;AACvBN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAFD;;AAIA,QAAMO,eAAe,GAAG,MAAM;AAC7BP,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,YAAY,IAAIA,YAAY,CAACW,YAA9B,gBACD;AAAK,IAAA,EAAE,EAAC,mBAAR;AACC,IAAA,GAAG,EAAEX,YAAY,CAACW,YADnB;AAEC,IAAA,GAAG,EAAEX,YAAY,CAACY,OAFnB;AAGC,IAAA,OAAO,EAAE,MAAMH,SAAS,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAKC,IANJ,eAQC;AAAK,IAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,OAAO,EAAE,MAAMA,SAAS,EADzB;AAEC,IAAA,SAAS,EAAG,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD,CARD,EAeGP,cAAc,gBACf;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAiC,IAAA,OAAO,EAAEQ,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAE,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAIC;AAAK,IAAA,SAAS,EAAE,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AACC,IAAA,EAAE,EAAET,SADL;AAEC,IAAA,SAAS,EAAC,yCAFX;AAGC,IAAA,OAAO,EAAEA,SAHV;AAIC,IAAA,IAAI,EAAEG,SAJP;AAKC,IAAA,OAAO,EAAEE,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,CADD,CADe,gBAkBf,yCAjCF,CADD;AAuCA,CA7DD;;AA+DA,eAAeP,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ArrowNoStem from '../../assets/svgs/arrow-no-stem';\nimport CircleCloseButton from '../../assets/svgs/circle-close-button';\nimport YouTube from 'react-youtube';\n\nconst VideoEmbed = ({ imageOverlay, ytVideoId }) => {\n\n\tconst [showVideoModal, setShowVideoModal] = useState(false);\n\tconst ytOptions = { }; // in case we ever need to provide youtube options for the embed\n\n\t// where we will store the YouTube player reference once it's ready\n\tlet ytPlayerRef = null;\n\n\tconst playerReady = (event) => {\n\t\t// when the player is ready we store off the reference to the player so we can play it when needed\n\t\tytPlayerRef = event.target;\n\t\tytPlayerRef.playVideo();\n\t}\n\n\tconst playVideo = () => {\n\t\tsetShowVideoModal(true);\n\t}\n\n\tconst closeVideoModal = () => {\n\t\tsetShowVideoModal(false);\n\t}\n\n\treturn (\n\t\t<div className={`video-embed`}>\n\t\t\t{ (imageOverlay && imageOverlay.mediaItemUrl) ?\n\t\t\t\t<img id=\"videoImageOverlay\"\n\t\t\t\t\tsrc={imageOverlay.mediaItemUrl}\n\t\t\t\t\talt={imageOverlay.altText}\n\t\t\t\t\tonClick={() => playVideo()} />\n\t\t\t\t: null\n\t\t\t}\n\t\t\t<div className={`video-embed__arrows`}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => playVideo()}\n\t\t\t\t\tclassName={`arrow-right`}>\n\t\t\t\t\t<ArrowNoStem />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{ showVideoModal ?\n\t\t\t\t<div className={'video-overlay'} onClick={closeVideoModal}>\n\t\t\t\t\t<div className={'video-overlay__wrapper'}>\n\t\t\t\t\t\t<div className={'video-overlay__wrapper__close-button'}>\n\t\t\t\t\t\t\t<CircleCloseButton />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'video-overlay__wrapper__player'}>\n\t\t\t\t\t\t\t<YouTube\n\t\t\t\t\t\t\t\tid={ytVideoId}\n\t\t\t\t\t\t\t\tclassName='video-overlay__wrapper__player__ytembed'\n\t\t\t\t\t\t\t\tvideoId={ytVideoId}\n\t\t\t\t\t\t\t\topts={ytOptions}\n\t\t\t\t\t\t\t\tonReady={playerReady}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default VideoEmbed;\n"]},"metadata":{},"sourceType":"module"}