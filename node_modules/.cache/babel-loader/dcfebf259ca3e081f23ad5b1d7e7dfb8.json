{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\index.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./assets/scss/index.scss\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { render } from \"react-dom\";\nimport { IntrospectionFragmentMatcher, InMemoryCache } from \"apollo-cache-inmemory\";\nimport introspectionQueryResultData from \"./apollo-schema/json/fragmentTypes.json\";\nimport App from \"./App\";\nconst env = process.env.NODE_ENV;\nlet uriMod = `dev`;\n\nif (env === `production`) {\n  uriMod = `test`;\n}\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData\n});\nconst httpLink = createHttpLink({\n  uri: `https://cms.reliant-technology.com/graphql`\n});\nconst cache = new InMemoryCache({\n  fragmentMatcher\n});\nconst client = new ApolloClient({\n  cache,\n  link: httpLink,\n  credentials: \"include\"\n});\nrender( /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 4\n  }\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/index.js"],"names":["React","BrowserRouter","Router","ApolloClient","ApolloProvider","createHttpLink","render","IntrospectionFragmentMatcher","InMemoryCache","introspectionQueryResultData","App","env","process","NODE_ENV","uriMod","fragmentMatcher","httpLink","uri","cache","client","link","credentials","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,0BAAP;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SACEC,4BADF,EAEEC,aAFF,QAGO,uBAHP;AAIA,OAAOC,4BAAP,MAAyC,yCAAzC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;AACA,IAAIC,MAAM,GAAI,KAAd;;AACA,IAAIH,GAAG,KAAM,YAAb,EAA0B;AACzBG,EAAAA,MAAM,GAAI,MAAV;AACA;;AAED,MAAMC,eAAe,GAAG,IAAIR,4BAAJ,CAAiC;AACvDE,EAAAA;AADuD,CAAjC,CAAxB;AAGA,MAAMO,QAAQ,GAAGX,cAAc,CAAC;AAC9BY,EAAAA,GAAG,EAAG;AADwB,CAAD,CAA/B;AAGA,MAAMC,KAAK,GAAG,IAAIV,aAAJ,CAAkB;AAAEO,EAAAA;AAAF,CAAlB,CAAd;AACA,MAAMI,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9Be,EAAAA,KAD8B;AAE9BE,EAAAA,IAAI,EAAEJ,QAFwB;AAG9BK,EAAAA,WAAW,EAAE;AAHiB,CAAjB,CAAf;AAMAf,MAAM,eACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADK,EAMLG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANK,CAAN","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./assets/scss/index.scss\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { render } from \"react-dom\";\nimport {\n  IntrospectionFragmentMatcher,\n  InMemoryCache\n} from \"apollo-cache-inmemory\";\nimport introspectionQueryResultData from \"./apollo-schema/json/fragmentTypes.json\";\nimport App from \"./App\";\n\nconst env = process.env.NODE_ENV;\nlet uriMod = `dev`;\nif (env === `production`) {\n\turiMod = `test`;\n}\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData\n});\nconst httpLink = createHttpLink({\n  uri: `https://cms.reliant-technology.com/graphql`\n});\nconst cache = new InMemoryCache({ fragmentMatcher });\nconst client = new ApolloClient({\n  cache,\n  link: httpLink,\n  credentials: \"include\"\n});\n\nrender(\n\t<Router>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App />\n\t\t</ApolloProvider>\n\t</Router>,\n\tdocument.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}