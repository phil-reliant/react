{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\FlexibleContent\\\\ServiceTableMobile.js\";\nimport React from \"react\";\n\nconst ServiceTableMobile = props => {\n  const {\n    RenderCell\n  } = props; // console.log('ServiceTable props', props);\n  // props.highlightingDirection\n  // props.columnHeadings[]\n  // .. columnHeading\n  // props.rowData[]\n  // .. rowHeading\n  // .. columnData[]\n  // .. .. type [checkbox, text]\n  // .. .. checkbox\n  // .. .. text\n  // .. .. optionalLink\n\n  const GetColumnHeadingForColumnIndex = index => {\n    if (!props.columnHeadings) {\n      return \"\";\n    }\n\n    if (index >= props.columnHeadings.length) {\n      return \"\";\n    }\n\n    return props.columnHeadings[index].columnHeading;\n  }; // we need to build a filtered list of `rowData` that has `rowHeading` and relative `columnData` defined to avoid\n  // conditionally returning <></> as we must define a `key` when mapping `rowData` to render\n\n\n  let filteredRowData = [];\n\n  if (props.rowData) {\n    for (let i in props.rowData) {\n      var rowEntry = props.rowData[i];\n\n      if (rowEntry.rowHeading && rowEntry.columnData) {\n        filteredRowData.push(rowEntry);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 service-table__table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, filteredRowData.map((rowEntry, rowIndex) => /*#__PURE__*/React.createElement(\"table\", {\n    key: `row-${rowIndex}`,\n    className: \"service-table__table-wrapper__table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"row-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, rowEntry.rowHeading))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, rowEntry.columnData.map((colData, colIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: `st-row-${colIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"half-width-td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, GetColumnHeadingForColumnIndex(colIndex)), /*#__PURE__*/React.createElement(\"td\", {\n    className: `half-width-td service-table__table-wrapper__table__row__col\n\t\t\t\t\t\t\t\t\t\t\t\t\t${props.leftAlignContent ? 'left-aligned-cell' : 'center-aligned-cell'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t${props.highlightingDirection === 'columns' ? 'col-striped' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, RenderCell(colData))))))))));\n};\n\nexport default ServiceTableMobile;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/FlexibleContent/ServiceTableMobile.js"],"names":["React","ServiceTableMobile","props","RenderCell","GetColumnHeadingForColumnIndex","index","columnHeadings","length","columnHeading","filteredRowData","rowData","i","rowEntry","rowHeading","columnData","push","map","rowIndex","colData","colIndex","leftAlignContent","highlightingDirection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB,CADmC,CAGnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAME,8BAA8B,GAAIC,KAAD,IAAW;AACjD,QAAI,CAACH,KAAK,CAACI,cAAX,EAA2B;AAC1B,aAAO,EAAP;AACA;;AAED,QAAID,KAAK,IAAIH,KAAK,CAACI,cAAN,CAAqBC,MAAlC,EAA0C;AACzC,aAAO,EAAP;AACA;;AAED,WAAOL,KAAK,CAACI,cAAN,CAAqBD,KAArB,EAA4BG,aAAnC;AACA,GAVD,CAhBmC,CA4BnC;AACA;;;AACA,MAAIC,eAAe,GAAG,EAAtB;;AACA,MAAIP,KAAK,CAACQ,OAAV,EAAmB;AAClB,SAAK,IAAIC,CAAT,IAAcT,KAAK,CAACQ,OAApB,EAA6B;AAC5B,UAAIE,QAAQ,GAAGV,KAAK,CAACQ,OAAN,CAAcC,CAAd,CAAf;;AACA,UAAIC,QAAQ,CAACC,UAAT,IAAuBD,QAAQ,CAACE,UAApC,EAAgD;AAC/CL,QAAAA,eAAe,CAACM,IAAhB,CAAqBH,QAArB;AACA;AACD;AACD;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEH,eAAe,CAACO,GAAhB,CAAoB,CAACJ,QAAD,EAAWK,QAAX,kBACnB;AAAO,IAAA,GAAG,EAAG,OAAMA,QAAS,EAA5B;AACC,IAAA,SAAS,EAAC,qCADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBL,QAAQ,CAACC,UAA1B,CADD,CADD,CAFD,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEED,QAAQ,CAACE,UAAT,CAAoBE,GAApB,CAAwB,CAACE,OAAD,EAAUC,QAAV,kBACvB;AAAI,IAAA,GAAG,EAAG,UAASA,QAAS,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCf,8BAA8B,CAACe,QAAD,CAA9D,CADD,eAEC;AAAI,IAAA,SAAS,EAAG;eACbjB,KAAK,CAACkB,gBAAN,GAAyB,mBAAzB,GAA+C,qBAAsB;eACrElB,KAAK,CAACmB,qBAAN,KAAgC,SAAhC,GAA4C,aAA5C,GAA4D,EAAG,EAFlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGlB,UAAU,CAACe,OAAD,CAJb,CAFD,CADD,CAFF,CAPD,CADD,CAFF,CADD,CADD,CADD;AAoCA,CA5ED;;AA6EA,eAAejB,kBAAf","sourcesContent":["import React from \"react\";\n\nconst ServiceTableMobile = props => {\n\tconst { RenderCell } = props;\n\n\t// console.log('ServiceTable props', props);\n\n\t// props.highlightingDirection\n\t// props.columnHeadings[]\n\t// .. columnHeading\n\t// props.rowData[]\n\t// .. rowHeading\n\t// .. columnData[]\n\t// .. .. type [checkbox, text]\n\t// .. .. checkbox\n\t// .. .. text\n\t// .. .. optionalLink\n\n\tconst GetColumnHeadingForColumnIndex = (index) => {\n\t\tif (!props.columnHeadings) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (index >= props.columnHeadings.length) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn props.columnHeadings[index].columnHeading;\n\t}\n\n\t// we need to build a filtered list of `rowData` that has `rowHeading` and relative `columnData` defined to avoid\n\t// conditionally returning <></> as we must define a `key` when mapping `rowData` to render\n\tlet filteredRowData = [];\n\tif (props.rowData) {\n\t\tfor (let i in props.rowData) {\n\t\t\tvar rowEntry = props.rowData[i];\n\t\t\tif (rowEntry.rowHeading && rowEntry.columnData) {\n\t\t\t\tfilteredRowData.push(rowEntry);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className='col-12 service-table__table-wrapper'>\n\t\t\t\t\t{\n\t\t\t\t\t\tfilteredRowData.map((rowEntry, rowIndex) => (\n\t\t\t\t\t\t\t<table key={`row-${rowIndex}`}\n\t\t\t\t\t\t\t\tclassName='service-table__table-wrapper__table'>\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr className='row-striped'>\n\t\t\t\t\t\t\t\t\t\t<th colSpan='2'>{rowEntry.rowHeading}</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\trowEntry.columnData.map((colData, colIndex) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={`st-row-${colIndex}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='half-width-td'>{ GetColumnHeadingForColumnIndex(colIndex) }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className={`half-width-td service-table__table-wrapper__table__row__col\n\t\t\t\t\t\t\t\t\t\t\t\t\t${props.leftAlignContent ? 'left-aligned-cell' : 'center-aligned-cell'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t${props.highlightingDirection === 'columns' ? 'col-striped' : ''}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRenderCell(colData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default ServiceTableMobile;\n"]},"metadata":{},"sourceType":"module"}