{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\ResourceListing\\\\index.js\";\n// The 2-up resource listing of PDFs and Video links as found on product pages\nimport React, { useState } from \"react\";\nimport CircleCloseButton from '../../assets/svgs/circle-close-button';\nimport PDFIcon from '../../assets/svgs/resource-pdf-icon';\nimport VideoIcon from '../../assets/svgs/resource-video-icon';\nimport YouTube from 'react-youtube';\nimport { GetYoutubeID } from \"../../utils/YouTubeHelpers\";\n\nconst ResourceListing = props => {\n  var resourceListingWrapper = props.resource_listing;\n  var resourceItems = resourceListingWrapper.resourceListing;\n  const [showVideoModal, setShowVideoModal] = useState(false);\n  const [youtubeVideoId, setYoutubeVideoId] = useState('');\n  const ytOptions = {}; // in case we ever need to provide youtube options for the embed\n  // where we will store the YouTube player reference once it's ready\n\n  let ytPlayerRef = null;\n\n  const playerReady = event => {\n    // when the player is ready we store off the reference to the player so we can play it when needed\n    ytPlayerRef = event.target;\n    ytPlayerRef.playVideo();\n  };\n\n  const playVideo = item => {\n    setYoutubeVideoId(GetYoutubeID(item.youtubeVideo));\n    setShowVideoModal(true);\n  };\n\n  const closeVideoModal = () => {\n    setShowVideoModal(false);\n  };\n\n  const renderVideoAsset = item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `resource-listing__item-container__item__inner`,\n      onClick: () => playVideo(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(VideoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, item.resourceLabel));\n  };\n\n  const renderPDFAsset = item => {\n    return item.pdfFile && item.pdfFile.mediaItemUrl ? /*#__PURE__*/React.createElement(\"div\", {\n      className: `resource-listing__item-container__item__inner`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: item.pdfFile.mediaItemUrl,\n      className: `resource-listing__item-container__item__inner`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(PDFIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }, item.resourceLabel))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `resource-listing`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, resourceItems && resourceItems.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"h7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, \"Resources\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `resource-listing__item-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }, resourceItems.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `resource_${index}`,\n      className: `resource-listing__item-container__item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }\n    }, item.type === \"video\" ? renderVideoAsset(item) : renderPDFAsset(item));\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), showVideoModal ? /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay',\n    onClick: closeVideoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay__wrapper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay__wrapper__close-button',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircleCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: 'video-overlay__wrapper__player',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(YouTube, {\n    id: youtubeVideoId,\n    className: \"video-overlay__wrapper__player__ytembed\",\n    videoId: youtubeVideoId,\n    opts: ytOptions,\n    onReady: playerReady,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default ResourceListing;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/ResourceListing/index.js"],"names":["React","useState","CircleCloseButton","PDFIcon","VideoIcon","YouTube","GetYoutubeID","ResourceListing","props","resourceListingWrapper","resource_listing","resourceItems","resourceListing","showVideoModal","setShowVideoModal","youtubeVideoId","setYoutubeVideoId","ytOptions","ytPlayerRef","playerReady","event","target","playVideo","item","youtubeVideo","closeVideoModal","renderVideoAsset","resourceLabel","renderPDFAsset","pdfFile","mediaItemUrl","length","map","index","type"],"mappings":"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","sourcesContent":["// The 2-up resource listing of PDFs and Video links as found on product pages\nimport React, { useState } from \"react\";\nimport CircleCloseButton from '../../assets/svgs/circle-close-button';\nimport PDFIcon from '../../assets/svgs/resource-pdf-icon';\nimport VideoIcon from '../../assets/svgs/resource-video-icon';\nimport YouTube from 'react-youtube';\nimport { GetYoutubeID } from \"../../utils/YouTubeHelpers\";\n\nconst ResourceListing = (props) => {\n\n\tvar resourceListingWrapper = props.resource_listing;\n\tvar resourceItems = resourceListingWrapper.resourceListing;\n\n\tconst [showVideoModal, setShowVideoModal] = useState(false);\n\tconst [youtubeVideoId, setYoutubeVideoId] = useState('');\n\n\tconst ytOptions = { }; // in case we ever need to provide youtube options for the embed\n\n\t// where we will store the YouTube player reference once it's ready\n\tlet ytPlayerRef = null;\n\n\tconst playerReady = (event) => {\n\t\t// when the player is ready we store off the reference to the player so we can play it when needed\n\t\tytPlayerRef = event.target;\n\t\tytPlayerRef.playVideo();\n\t}\n\n\tconst playVideo = (item) => {\n\t\tsetYoutubeVideoId(GetYoutubeID(item.youtubeVideo));\n\t\tsetShowVideoModal(true);\n\t}\n\n\tconst closeVideoModal = () => {\n\t\tsetShowVideoModal(false);\n\t}\n\n\tconst renderVideoAsset = (item) => {\n\t\treturn (\n\t\t\t<div className={`resource-listing__item-container__item__inner`} onClick={() => playVideo(item)}>\n\t\t\t\t<VideoIcon />\n\t\t\t\t<p>{item.resourceLabel}</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderPDFAsset = (item) => {\n\t\treturn (\n\t\t\t(item.pdfFile && item.pdfFile.mediaItemUrl) ?\n\t\t\t<div className={`resource-listing__item-container__item__inner`}>\n\t\t\t\t<a href={item.pdfFile.mediaItemUrl}\n\t\t\t\t\tclassName={`resource-listing__item-container__item__inner`}\n\t\t\t\t\ttarget=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t<PDFIcon />\n\t\t\t\t\t<p>{item.resourceLabel}</p>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t:\n\t\t\t<></>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className={`resource-listing`}>\n\t\t\t{ (resourceItems && resourceItems.length > 0) ?\n\t\t\t\t<>\n\t\t\t\t\t<h6 className=\"h7\">Resources</h6>\n\t\t\t\t\t<div className={`resource-listing__item-container`}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresourceItems.map((item, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={`resource_${index}`} className={`resource-listing__item-container__item`}>\n\t\t\t\t\t\t\t\t\t\t{ (item.type === \"video\") ?\n\t\t\t\t\t\t\t\t\t\t\trenderVideoAsset(item)\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\trenderPDFAsset(item)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t\t:\n\t\t\t\t<></>\n\t\t\t}\n\t\t\t{ showVideoModal ?\n\t\t\t\t<div className={'video-overlay'} onClick={closeVideoModal}>\n\t\t\t\t\t<div className={'video-overlay__wrapper'}>\n\t\t\t\t\t\t<div className={'video-overlay__wrapper__close-button'}>\n\t\t\t\t\t\t\t<CircleCloseButton />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'video-overlay__wrapper__player'}>\n\t\t\t\t\t\t\t<YouTube\n\t\t\t\t\t\t\t\tid={youtubeVideoId}\n\t\t\t\t\t\t\t\tclassName='video-overlay__wrapper__player__ytembed'\n\t\t\t\t\t\t\t\tvideoId={youtubeVideoId}\n\t\t\t\t\t\t\t\topts={ytOptions}\n\t\t\t\t\t\t\t\tonReady={playerReady}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default ResourceListing;\n"]},"metadata":{},"sourceType":"module"}