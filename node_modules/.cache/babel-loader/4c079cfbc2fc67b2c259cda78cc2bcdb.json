{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\ProductCatalog\\\\SearchResultsPanel.js\";\nimport React from \"react\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { MakeRelativePath } from '../../utils/UrlUtils';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport RightArrow from '../../assets/svgs/right-arrow.js';\n\nconst SearchResultsPanel = ({\n  submittedSearchText\n}) => {\n  const maxResults = 10000;\n  const PRODUCT_SEARCH_QUERY = gql`\n\t\t\tquery PRODUCT_SEARCH_QUERY($searchTerm: String) {\n\t\t\t\tproducts(where: {search: $searchTerm, orderby: {field: SLUG, order: ASC}}, first: ${maxResults}) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PRODUCT_SEARCH_QUERY, {\n    variables: {\n      searchTerm: submittedSearchText\n    }\n  });\n  let resultsMessage = \"\";\n  let resultCount = 0;\n  let resultSet = null;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      paddingTopLarge: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (error) {\n    console.error(\"SearchResultsPanel module failed to run query!\", error);\n    resultsMessage = `An error occurred while querying products. ${error}`;\n  } else if (!data.products || !data.products.edges) {\n    resultsMessage = \"No results found\";\n  } else {\n    resultCount = data.products.edges.length;\n    resultSet = data.products.edges;\n    resultsMessage = `${resultCount} Results`;\n\n    if (resultCount === maxResults) {\n      resultsMessage = `Showing first ${resultCount} results`;\n    }\n  } // console.log('resultSet', resultSet);\n  // console.log('data', data);\n  // console.log('submittedSearchText', submittedSearchText);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `search-results-panel`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: `search-results-panel__heading`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, submittedSearchText), /*#__PURE__*/React.createElement(\"p\", {\n    className: `search-results-panel__results-label`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, resultsMessage), resultSet ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `search-results-panel__results-area`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"search-results-panel__results-area__listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, resultSet.map(productNode => /*#__PURE__*/React.createElement(\"li\", {\n    key: `key-${productNode.node.productId}`,\n    className: `search-results-panel__results-area__listing__item`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: MakeRelativePath(productNode.node.link),\n      state: {\n        referringUrl: window.location.href\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, productNode.node.name), /*#__PURE__*/React.createElement(RightArrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })))))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default SearchResultsPanel;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/ProductCatalog/SearchResultsPanel.js"],"names":["React","gql","useQuery","Link","MakeRelativePath","LoadingSpinner","RightArrow","SearchResultsPanel","submittedSearchText","maxResults","PRODUCT_SEARCH_QUERY","loading","error","data","variables","searchTerm","resultsMessage","resultCount","resultSet","console","products","edges","length","map","productNode","node","productId","pathname","link","state","referringUrl","window","location","href","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { MakeRelativePath } from '../../utils/UrlUtils';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport RightArrow from '../../assets/svgs/right-arrow.js';\n\nconst SearchResultsPanel = ({ submittedSearchText }) => {\n\n\tconst maxResults = 10000;\n\n\tconst PRODUCT_SEARCH_QUERY = gql`\n\t\t\tquery PRODUCT_SEARCH_QUERY($searchTerm: String) {\n\t\t\t\tproducts(where: {search: $searchTerm, orderby: {field: SLUG, order: ASC}}, first: ${maxResults}) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`;\n\n\tconst { loading, error, data } = useQuery(PRODUCT_SEARCH_QUERY, {\n\t\tvariables: { searchTerm: submittedSearchText }\n\t});\n\n\tlet resultsMessage = \"\";\n\tlet resultCount = 0;\n\tlet resultSet = null;\n\n\tif (loading) {\n\t\treturn <LoadingSpinner paddingTopLarge />\n\t}\n\tif (error) {\n\t\tconsole.error(\"SearchResultsPanel module failed to run query!\", error);\n\t\tresultsMessage = `An error occurred while querying products. ${error}`;\n\t} else if (!data.products || !data.products.edges) {\n\t\tresultsMessage = \"No results found\";\n\t} else {\n\t\tresultCount = data.products.edges.length;\n\t\tresultSet = data.products.edges;\n\t\tresultsMessage = `${resultCount} Results`;\n\t\tif (resultCount === maxResults) {\n\t\t\tresultsMessage = `Showing first ${resultCount} results`\n\t\t}\n\t}\n\n\t// console.log('resultSet', resultSet);\n\t// console.log('data', data);\n\t// console.log('submittedSearchText', submittedSearchText);\n\n\treturn (\n\t\t<div className={`search-results-panel`}>\n\t\t\t<h3 className={`search-results-panel__heading`}>{submittedSearchText}</h3>\n\t\t\t<p className={`search-results-panel__results-label`}>{resultsMessage}</p>\n\n\t\t\t{ resultSet ?\n\t\t\t\t<div className={`search-results-panel__results-area`}>\n\t\t\t\t\t<ul className='search-results-panel__results-area__listing'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresultSet.map(productNode => (\n\t\t\t\t\t\t\t\t<li key={`key-${productNode.node.productId}`}\n\t\t\t\t\t\t\t\t\tclassName={`search-results-panel__results-area__listing__item`}>\n\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\tpathname: MakeRelativePath(productNode.node.link),\n\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\treferringUrl: window.location.href\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t<span>{productNode.node.name}</span>\n\t\t\t\t\t\t\t\t\t\t<RightArrow />\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<></>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default SearchResultsPanel;\n"]},"metadata":{},"sourceType":"module"}