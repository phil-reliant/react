{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\FlexibleContent\\\\LogoSlider.js\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport ArrowNoStem from '../../assets/svgs/arrow-no-stem.js';\n\nconst LogoSlider = props => {\n  const slider = useRef(null);\n  const {\n    logos\n  } = props;\n  const baseClass = `layout-logo-slider`;\n  let swiping = false;\n  let slidesToShow = 5;\n  let slidesToShow768 = 2;\n  let slidesToShow992 = 3;\n\n  if (logos) {\n    if (logos.length < slidesToShow) {\n      slidesToShow = logos.length;\n    }\n\n    if (logos.length < slidesToShow768) {\n      slidesToShow768 = logos.length;\n    }\n\n    if (logos.length < slidesToShow992) {\n      slidesToShow992 = logos.length;\n    }\n  }\n\n  const GetWindowSlideCount = () => {\n    // console.log('width', window.innerWidth);\n    let slideCount = slidesToShow;\n\n    if (window.innerWidth < 768) {\n      slideCount = slidesToShow768;\n    } else if (window.innerWidth < 992) {\n      slideCount = slidesToShow992;\n    } // console.log('GetWindowSlideCount', slideCount);\n\n\n    return slideCount;\n  };\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: slidesToShow,\n    slidesToScroll: 1,\n    arrows: false,\n    variableWidth: true,\n    responsive: [{\n      breakpoint: 768,\n      settings: {\n        slidesToShow: slidesToShow768\n      }\n    }, {\n      breakpoint: 992,\n      settings: {\n        slidesToShow: slidesToShow992\n      }\n    }]\n  };\n\n  const next = () => {\n    slider.current.slickNext();\n  };\n\n  const prev = () => {\n    slider.current.slickPrev();\n  }; // NOTE:: to avoid click happenign when the user lets up at the end of a swipe, we need to make sure they aren't in the process of a swipe\n  // ref: https://github.com/akiran/react-slick/issues/604#issuecomment-526543085\n\n\n  const handleMouseDown = event => {\n    event.preventDefault();\n  };\n\n  const handleMouseUp = () => {\n    swiping = slider.current.innerSlider.state.swiping;\n  };\n\n  const handleClick = (event, logoItem) => {\n    if (swiping) {\n      event.preventDefault();\n    } else {\n      // not all slides are clickable, so only launch the link if it is valid\n      if (logoItem && logoItem.link) {\n        window.open(logoItem.link, \"_blank\");\n      }\n    }\n  };\n\n  const renderSlides = () => {\n    if (!logos.length) return ``;\n    const slides = logos.map((logoItem, index) => {\n      const {\n        logo\n      } = logoItem;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `logo-slide-${index}`,\n        className: `${baseClass}__slide`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `${baseClass}__slide__inner`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: `${logoItem.link ? 'clickable' : ''}`,\n        src: logo.mediaItemUrl,\n        srcSet: logo.srcSet,\n        alt: logo.altText || logo.title,\n        onClickCapture: e => handleClick(e, logoItem),\n        onMouseUpCapture: handleMouseUp,\n        onMouseDownCapture: handleMouseDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      })));\n    }); // console.log('render - getwindowslidecount', GetWindowSlideCount())\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${baseClass}__slides`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({\n      ref: slider\n    }, settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }), slides), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${baseClass}__arrows`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, slides && slides.length > GetWindowSlideCount() ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: prev,\n      className: `arrow-left`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `arrow-icon`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(ArrowNoStem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: next,\n      className: `arrow-right`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `arrow-icon`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(ArrowNoStem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n  };\n\n  let title = ``;\n\n  if (props.title) {\n    title = /*#__PURE__*/React.createElement(\"h3\", {\n      className: `${baseClass}__title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 4\n      }\n    }, props.title);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: baseClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-12 full-bleed-right-mobile-col`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__inner`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, title, renderSlides())))));\n};\n\nLogoSlider.propTypes = {\n  title: PropTypes.string,\n  logos: PropTypes.array.isRequired\n};\nexport default LogoSlider;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/FlexibleContent/LogoSlider.js"],"names":["React","useRef","PropTypes","Slider","ArrowNoStem","LogoSlider","props","slider","logos","baseClass","swiping","slidesToShow","slidesToShow768","slidesToShow992","length","GetWindowSlideCount","slideCount","window","innerWidth","settings","dots","infinite","speed","slidesToScroll","arrows","variableWidth","responsive","breakpoint","next","current","slickNext","prev","slickPrev","handleMouseDown","event","preventDefault","handleMouseUp","innerSlider","state","handleClick","logoItem","link","open","renderSlides","slides","map","index","logo","mediaItemUrl","srcSet","altText","title","e","propTypes","string","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC3B,QAAMC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAArB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYF,KAAlB;AACA,QAAMG,SAAS,GAAI,oBAAnB;AAEA,MAAIC,OAAO,GAAG,KAAd;AAEA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,eAAe,GAAG,CAAtB;;AACA,MAAIL,KAAJ,EAAW;AACV,QAAIA,KAAK,CAACM,MAAN,GAAeH,YAAnB,EAAiC;AAChCA,MAAAA,YAAY,GAAGH,KAAK,CAACM,MAArB;AACA;;AACD,QAAIN,KAAK,CAACM,MAAN,GAAeF,eAAnB,EAAoC;AACnCA,MAAAA,eAAe,GAAGJ,KAAK,CAACM,MAAxB;AACA;;AACD,QAAIN,KAAK,CAACM,MAAN,GAAeD,eAAnB,EAAoC;AACnCA,MAAAA,eAAe,GAAGL,KAAK,CAACM,MAAxB;AACA;AACD;;AAED,QAAMC,mBAAmB,GAAG,MAAM;AACjC;AACA,QAAIC,UAAU,GAAGL,YAAjB;;AACA,QAAIM,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AAC5BF,MAAAA,UAAU,GAAGJ,eAAb;AACA,KAFD,MAEO,IAAIK,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AACnCF,MAAAA,UAAU,GAAGH,eAAb;AACA,KAPgC,CAQjC;;;AACA,WAAOG,UAAP;AACA,GAVD;;AAYA,QAAMG,QAAQ,GAAG;AAChBC,IAAAA,IAAI,EAAE,KADU;AAEhBC,IAAAA,QAAQ,EAAE,IAFM;AAGhBC,IAAAA,KAAK,EAAE,GAHS;AAIhBX,IAAAA,YAAY,EAAEA,YAJE;AAKhBY,IAAAA,cAAc,EAAE,CALA;AAMhBC,IAAAA,MAAM,EAAE,KANQ;AAOhBC,IAAAA,aAAa,EAAE,IAPC;AAQhBC,IAAAA,UAAU,EAAE,CACX;AACCC,MAAAA,UAAU,EAAE,GADb;AAECR,MAAAA,QAAQ,EAAE;AACTR,QAAAA,YAAY,EAAEC;AADL;AAFX,KADW,EAOX;AACCe,MAAAA,UAAU,EAAE,GADb;AAECR,MAAAA,QAAQ,EAAE;AACTR,QAAAA,YAAY,EAAEE;AADL;AAFX,KAPW;AARI,GAAjB;;AAwBA,QAAMe,IAAI,GAAG,MAAM;AAClBrB,IAAAA,MAAM,CAACsB,OAAP,CAAeC,SAAf;AACA,GAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM;AAClBxB,IAAAA,MAAM,CAACsB,OAAP,CAAeG,SAAf;AACA,GAFD,CA9D2B,CAkE3B;AACA;;;AACA,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,GAFD;;AAGA,QAAMC,aAAa,GAAG,MAAM;AAC3B1B,IAAAA,OAAO,GAAGH,MAAM,CAACsB,OAAP,CAAeQ,WAAf,CAA2BC,KAA3B,CAAiC5B,OAA3C;AACA,GAFD;;AAGA,QAAM6B,WAAW,GAAG,CAACL,KAAD,EAAQM,QAAR,KAAqB;AACxC,QAAI9B,OAAJ,EAAa;AACZwB,MAAAA,KAAK,CAACC,cAAN;AACA,KAFD,MAEO;AACN;AACA,UAAIK,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC9BxB,QAAAA,MAAM,CAACyB,IAAP,CAAYF,QAAQ,CAACC,IAArB,EAA2B,QAA3B;AACA;AACD;AACD,GATD;;AAWA,QAAME,YAAY,GAAG,MAAM;AAC1B,QAAI,CAACnC,KAAK,CAACM,MAAX,EAAmB,OAAQ,EAAR;AAEnB,UAAM8B,MAAM,GAAGpC,KAAK,CAACqC,GAAN,CAAU,CAACL,QAAD,EAAWM,KAAX,KAAqB;AAC7C,YAAM;AAAEC,QAAAA;AAAF,UAAWP,QAAjB;AAEA,0BACC;AAAK,QAAA,GAAG,EAAG,cAAaM,KAAM,EAA9B;AAAiC,QAAA,SAAS,EAAG,GAAErC,SAAU,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,SAAS,EAAG,GAAEA,SAAU,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AACC,QAAA,SAAS,EAAG,GAAE+B,QAAQ,CAACC,IAAT,GAAgB,WAAhB,GAA8B,EAAG,EADhD;AAEC,QAAA,GAAG,EAAEM,IAAI,CAACC,YAFX;AAGC,QAAA,MAAM,EAAED,IAAI,CAACE,MAHd;AAIC,QAAA,GAAG,EAAEF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAJ3B;AAKC,QAAA,cAAc,EAAGC,CAAD,IAAOb,WAAW,CAACa,CAAD,EAAIZ,QAAJ,CALnC;AAMC,QAAA,gBAAgB,EAAEJ,aANnB;AAOC,QAAA,kBAAkB,EAAEH,eAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,CADD;AAcA,KAjBc,CAAf,CAH0B,CAsB1B;;AACA,wBACC;AAAK,MAAA,SAAS,EAAG,GAAExB,SAAU,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AACC,MAAA,GAAG,EAAEF;AADN,OAEKY,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIEyB,MAJF,CADD,eAOC;AAAK,MAAA,SAAS,EAAG,GAAEnC,SAAU,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGmC,MAAM,IAAIA,MAAM,CAAC9B,MAAP,GAAgBC,mBAAmB,EAA9C,gBACC,uDACC;AACC,MAAA,OAAO,EAAEgB,IADV;AAEC,MAAA,SAAS,EAAG,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJD,CADD,eASC;AACC,MAAA,OAAO,EAAEH,IADV;AAEC,MAAA,SAAS,EAAG,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJD,CATD,CADD,gBAoBC,yCAtBH,CAPD,CADD;AAmCA,GA1DD;;AA4DA,MAAIuB,KAAK,GAAI,EAAb;;AACA,MAAI7C,KAAK,CAAC6C,KAAV,EAAiB;AAChBA,IAAAA,KAAK,gBACJ;AAAI,MAAA,SAAS,EAAG,GAAE1C,SAAU,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCH,KAAK,CAAC6C,KAA7C,CADD;AAGA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAE1C,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAG,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAG,GAAEA,SAAU,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE0C,KADF,EAEER,YAAY,EAFd,CADD,CADD,CADD,CADD,CADD;AAcA,CAtKD;;AAwKAtC,UAAU,CAACgD,SAAX,GAAuB;AACtBF,EAAAA,KAAK,EAAEjD,SAAS,CAACoD,MADK;AAEtB9C,EAAAA,KAAK,EAAEN,SAAS,CAACqD,KAAV,CAAgBC;AAFD,CAAvB;AAKA,eAAenD,UAAf","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport ArrowNoStem from '../../assets/svgs/arrow-no-stem.js';\n\nconst LogoSlider = props => {\n\tconst slider = useRef(null);\n\tconst { logos } = props;\n\tconst baseClass = `layout-logo-slider`;\n\n\tlet swiping = false;\n\n\tlet slidesToShow = 5;\n\tlet slidesToShow768 = 2;\n\tlet slidesToShow992 = 3;\n\tif (logos) {\n\t\tif (logos.length < slidesToShow) {\n\t\t\tslidesToShow = logos.length;\n\t\t}\n\t\tif (logos.length < slidesToShow768) {\n\t\t\tslidesToShow768 = logos.length;\n\t\t}\n\t\tif (logos.length < slidesToShow992) {\n\t\t\tslidesToShow992 = logos.length;\n\t\t}\n\t}\n\n\tconst GetWindowSlideCount = () => {\n\t\t// console.log('width', window.innerWidth);\n\t\tlet slideCount = slidesToShow;\n\t\tif (window.innerWidth < 768) {\n\t\t\tslideCount = slidesToShow768;\n\t\t} else if (window.innerWidth < 992) {\n\t\t\tslideCount = slidesToShow992;\n\t\t}\n\t\t// console.log('GetWindowSlideCount', slideCount);\n\t\treturn slideCount;\n\t}\n\n\tconst settings = {\n\t\tdots: false,\n\t\tinfinite: true,\n\t\tspeed: 500,\n\t\tslidesToShow: slidesToShow,\n\t\tslidesToScroll: 1,\n\t\tarrows: false,\n\t\tvariableWidth: true,\n\t\tresponsive: [\n\t\t\t{\n\t\t\t\tbreakpoint: 768,\n\t\t\t\tsettings: {\n\t\t\t\t\tslidesToShow: slidesToShow768\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tbreakpoint: 992,\n\t\t\t\tsettings: {\n\t\t\t\t\tslidesToShow: slidesToShow992\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n\tconst next = () => {\n\t\tslider.current.slickNext();\n\t}\n\n\tconst prev = () => {\n\t\tslider.current.slickPrev();\n\t}\n\n\t// NOTE:: to avoid click happenign when the user lets up at the end of a swipe, we need to make sure they aren't in the process of a swipe\n\t// ref: https://github.com/akiran/react-slick/issues/604#issuecomment-526543085\n\tconst handleMouseDown = event => {\n\t\tevent.preventDefault();\n\t};\n\tconst handleMouseUp = () => {\n\t\tswiping = slider.current.innerSlider.state.swiping;\n\t};\n\tconst handleClick = (event, logoItem) => {\n\t\tif (swiping) {\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\t// not all slides are clickable, so only launch the link if it is valid\n\t\t\tif (logoItem && logoItem.link) {\n\t\t\t\twindow.open(logoItem.link, \"_blank\")\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderSlides = () => {\n\t\tif (!logos.length) return ``;\n\n\t\tconst slides = logos.map((logoItem, index) => {\n\t\t\tconst { logo } = logoItem;\n\n\t\t\treturn (\n\t\t\t\t<div key={`logo-slide-${index}`} className={`${baseClass}__slide`}>\n\t\t\t\t\t<div className={`${baseClass}__slide__inner`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={`${logoItem.link ? 'clickable' : ''}`}\n\t\t\t\t\t\t\tsrc={logo.mediaItemUrl}\n\t\t\t\t\t\t\tsrcSet={logo.srcSet}\n\t\t\t\t\t\t\talt={logo.altText || logo.title}\n\t\t\t\t\t\t\tonClickCapture={(e) => handleClick(e, logoItem)}\n\t\t\t\t\t\t\tonMouseUpCapture={handleMouseUp}\n\t\t\t\t\t\t\tonMouseDownCapture={handleMouseDown} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\n\t\t// console.log('render - getwindowslidecount', GetWindowSlideCount())\n\t\treturn (\n\t\t\t<div className={`${baseClass}__slides`}>\n\t\t\t\t<Slider\n\t\t\t\t\tref={slider}\n\t\t\t\t\t{...settings}\n\t\t\t\t>\n\t\t\t\t\t{slides}\n\t\t\t\t</Slider>\n\t\t\t\t<div className={`${baseClass}__arrows`}>\n\t\t\t\t\t{\n\t\t\t\t\t\t(slides && slides.length > GetWindowSlideCount()) ?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={prev}\n\t\t\t\t\t\t\t\t\tclassName={`arrow-left`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className={`arrow-icon`}>\n\t\t\t\t\t\t\t\t\t\t<ArrowNoStem />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={next}\n\t\t\t\t\t\t\t\t\tclassName={`arrow-right`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className={`arrow-icon`}>\n\t\t\t\t\t\t\t\t\t\t<ArrowNoStem />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tlet title = ``;\n\tif (props.title) {\n\t\ttitle = (\n\t\t\t<h3 className={`${baseClass}__title`}>{props.title}</h3>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className={baseClass}>\n\t\t\t<div className={`container`}>\n\t\t\t\t<div className={`row`}>\n\t\t\t\t\t<div className={`col-12 full-bleed-right-mobile-col`}>\n\t\t\t\t\t\t<div className={`${baseClass}__inner`}>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t{renderSlides()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nLogoSlider.propTypes = {\n\ttitle: PropTypes.string,\n\tlogos: PropTypes.array.isRequired\n};\n\nexport default LogoSlider;\n"]},"metadata":{},"sourceType":"module"}