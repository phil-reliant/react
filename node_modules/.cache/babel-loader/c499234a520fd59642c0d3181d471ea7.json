{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Checkbox.jsx\";\nimport React from 'react';\nexport default (({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    cssClass,\n    isRequired,\n    choices,\n    inputs,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName\n  } = field;\n  const {\n    Checkbox = 'fieldset',\n    Label = 'legend',\n    Box = 'div'\n  } = styledComponents || false;\n  return /*#__PURE__*/React.createElement(Box, {\n    width: width,\n    className: validationMessage && touched || error ? `form-field error ${cssClass}` : `form-field ${cssClass}`,\n    style: {\n      display: hideField ? 'none' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: \"checkboxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"legend\",\n    className: `group-label ${labelPlacement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, label, label && isRequired ? /*#__PURE__*/React.createElement(\"abbr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 34\n    }\n  }, \"*\") : null), descriptionPlacement === 'above' && description ? description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }\n  }, description) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, choices.map((choice, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: type,\n    key: choice.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: `input_${formId}_${inputs[i].id}`,\n    type: \"checkbox\",\n    name: customName || `input_${inputs[i].id}`,\n    value: choice.value,\n    checked: value.includes(choice.value),\n    onChange: event => {\n      updateForm(event, field);\n      setTouched(id);\n      unsetError(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `input_${formId}_${inputs[i].id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, choice.text))), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, description)), (validationMessage && touched || error) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    id: `error_${formId}_${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, validationMessage || error)));\n});","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Checkbox.jsx"],"names":["React","field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","props","id","formId","type","label","cssClass","isRequired","choices","inputs","description","descriptionPlacement","labelPlacement","width","customName","Checkbox","Label","Box","display","undefined","map","choice","i","includes","event","text"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default ({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    cssClass,\n    isRequired,\n    choices,\n    inputs,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName,\n  } = field;\n\n  const { Checkbox = 'fieldset', Label = 'legend', Box = 'div' } = styledComponents || false;\n\n  return (\n    <Box\n      width={width}\n      className={\n        (validationMessage && touched) || error\n          ? `form-field error ${cssClass}`\n          : `form-field ${cssClass}`\n      }\n      style={{ display: hideField ? 'none' : undefined }}\n    >\n      <Checkbox className=\"checkboxes\">\n        <Label as=\"legend\" className={`group-label ${labelPlacement}`}>\n          {label}\n          {label && isRequired ? <abbr>*</abbr> : null}\n        </Label>\n        {descriptionPlacement === 'above' && description ? (\n          description && <div className=\"description\">{description}</div>\n        ) : (\n          <React.Fragment>\n            {choices.map((choice, i) => (\n              <div className={type} key={choice.value}>\n                <input\n                  id={`input_${formId}_${inputs[i].id}`}\n                  type=\"checkbox\"\n                  name={customName || `input_${inputs[i].id}`}\n                  value={choice.value}\n                  checked={value.includes(choice.value)}\n                  onChange={(event) => {\n                    updateForm(event, field);\n                    setTouched(id);\n                    unsetError(id);\n                  }}\n                />\n                <label htmlFor={`input_${formId}_${inputs[i].id}`}>{choice.text}</label>\n              </div>\n            ))}\n            {description && <div className=\"description\">{description}</div>}\n          </React.Fragment>\n        )}\n        {((validationMessage && touched) || error) && (\n          <span className=\"error-message\" id={`error_${formId}_${id}`}>\n            {validationMessage || error}\n          </span>\n        )}\n      </Checkbox>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}