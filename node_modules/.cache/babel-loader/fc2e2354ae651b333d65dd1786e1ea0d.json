{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\utils\\\\UrlUtils.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // ex: https://xenodochial-heyrovsky-68cf5e.netlify.com/case-studies/large-us-healthcare-provider-moves-to-reliant-technology-maintenance-plan/\n// becomes: /case-studies/large-us-healthcare-provider-moves-to-reliant-technology-maintenance-plan/\n\nexport function MakeRelativePath(absolutePath) {\n  try {\n    if (absolutePath === \"#\") {\n      return absolutePath;\n    } // if it starts with a `/` then we will assume it is already a relative path\n\n\n    if (absolutePath && absolutePath.startsWith(\"/\")) {\n      return absolutePath;\n    }\n\n    const parsedUrl = new URL(absolutePath); // console.log('parsedUrl', parsedUrl);\n\n    return parsedUrl.pathname;\n  } catch (ex) {\n    console.error(`MakeRelativePath failed to create a valid URL. Returning absolutePath. absolutePath:${absolutePath}`, ex);\n    return absolutePath;\n  }\n}\nexport function IsUrlExternal(absolutePath) {\n  try {\n    if (absolutePath === \"#\") {\n      return false;\n    } // if it starts with a `/` then we will assume it is an internal path\n\n\n    if (absolutePath && absolutePath.startsWith(\"/\")) {\n      return false;\n    }\n\n    const parsedUrl = new URL(absolutePath);\n\n    if (parsedUrl.origin === window.location.origin) {\n      return false;\n    } // if using localhost and dev environment, links will have this URL, so treat them as internal links\n\n\n    if (parsedUrl.origin === \"https://xenodochial-heyrovsky-68cf5e.netlify.com\" || parsedUrl.origin === \"http://xenodochial-heyrovsky-68cf5e.netlify.com\") {\n      return false;\n    }\n\n    return parsedUrl.origin !== window.location.origin;\n  } catch (ex) {\n    console.error(`IsUrlExternal failed to create a valid URL. Returning false. absolutePath:${absolutePath}`, ex);\n    return false;\n  }\n}\nexport function MakeInternalOrExternalLink(absolutePath, children, className, onClick, target) {\n  if (IsUrlExternal(absolutePath)) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: absolutePath,\n      target: target,\n      className: className,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, children);\n  } else {\n    let relativePath = MakeRelativePath(absolutePath);\n    return /*#__PURE__*/React.createElement(Link, {\n      to: relativePath,\n      target: target,\n      className: className,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, children);\n  }\n}\nexport const InternalOrExternalLink = props => {\n  const {\n    children,\n    className,\n    url,\n    target,\n    onClick\n  } = props;\n  return MakeInternalOrExternalLink(url, children, className, onClick, target);\n};","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/utils/UrlUtils.js"],"names":["React","Link","MakeRelativePath","absolutePath","startsWith","parsedUrl","URL","pathname","ex","console","error","IsUrlExternal","origin","window","location","MakeInternalOrExternalLink","children","className","onClick","target","relativePath","InternalOrExternalLink","props","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AAC9C,MAAI;AACH,QAAIA,YAAY,KAAK,GAArB,EAA0B;AACzB,aAAOA,YAAP;AACA,KAHE,CAKH;;;AACA,QAAIA,YAAY,IAAIA,YAAY,CAACC,UAAb,CAAwB,GAAxB,CAApB,EAAkD;AACjD,aAAOD,YAAP;AACA;;AAED,UAAME,SAAS,GAAG,IAAIC,GAAJ,CAAQH,YAAR,CAAlB,CAVG,CAWH;;AACA,WAAOE,SAAS,CAACE,QAAjB;AACA,GAbD,CAaE,OAAOC,EAAP,EAAW;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAe,uFAAsFP,YAAa,EAAlH,EAAqHK,EAArH;AACA,WAAOL,YAAP;AACA;AACD;AAED,OAAO,SAASQ,aAAT,CAAuBR,YAAvB,EAAqC;AAC3C,MAAI;AACH,QAAIA,YAAY,KAAK,GAArB,EAA0B;AACzB,aAAO,KAAP;AACA,KAHE,CAKH;;;AACA,QAAIA,YAAY,IAAIA,YAAY,CAACC,UAAb,CAAwB,GAAxB,CAApB,EAAkD;AACjD,aAAO,KAAP;AACA;;AAED,UAAMC,SAAS,GAAG,IAAIC,GAAJ,CAAQH,YAAR,CAAlB;;AACA,QAAIE,SAAS,CAACO,MAAV,KAAqBC,MAAM,CAACC,QAAP,CAAgBF,MAAzC,EAAiD;AAChD,aAAO,KAAP;AACA,KAbE,CAeH;;;AACA,QAAIP,SAAS,CAACO,MAAV,KAAqB,kDAArB,IACHP,SAAS,CAACO,MAAV,KAAqB,iDADtB,EACyE;AACvE,aAAO,KAAP;AACD;;AACD,WAAQP,SAAS,CAACO,MAAV,KAAqBC,MAAM,CAACC,QAAP,CAAgBF,MAA7C;AACA,GArBD,CAqBE,OAAOJ,EAAP,EAAW;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAe,6EAA4EP,YAAa,EAAxG,EAA2GK,EAA3G;AACA,WAAO,KAAP;AACA;AACD;AAED,OAAO,SAASO,0BAAT,CAAoCZ,YAApC,EAAkDa,QAAlD,EAA4DC,SAA5D,EAAuEC,OAAvE,EAAgFC,MAAhF,EAAwF;AAC9F,MAAIR,aAAa,CAACR,YAAD,CAAjB,EAAiC;AAChC,wBACC;AAAG,MAAA,IAAI,EAAEA,YAAT;AAAuB,MAAA,MAAM,EAAEgB,MAA/B;AAAuC,MAAA,SAAS,EAAEF,SAAlD;AAA6D,MAAA,OAAO,EAAEC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,QADF,CADD;AAKA,GAND,MAMO;AACN,QAAII,YAAY,GAAGlB,gBAAgB,CAACC,YAAD,CAAnC;AACA,wBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEiB,YAAV;AAAwB,MAAA,MAAM,EAAED,MAAhC;AAAwC,MAAA,SAAS,EAAEF,SAAnD;AAA8D,MAAA,OAAO,EAAEC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,QADF,CADD;AAKA;AACD;AAED,OAAO,MAAMK,sBAAsB,GAAGC,KAAK,IAAI;AAC9C,QAAM;AAAEN,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBM,IAAAA,GAAvB;AAA4BJ,IAAAA,MAA5B;AAAoCD,IAAAA;AAApC,MAAgDI,KAAtD;AACA,SAAOP,0BAA0B,CAACQ,GAAD,EAAMP,QAAN,EAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,CAAjC;AACA,CAHM","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// ex: https://xenodochial-heyrovsky-68cf5e.netlify.com/case-studies/large-us-healthcare-provider-moves-to-reliant-technology-maintenance-plan/\n// becomes: /case-studies/large-us-healthcare-provider-moves-to-reliant-technology-maintenance-plan/\nexport function MakeRelativePath(absolutePath) {\n\ttry {\n\t\tif (absolutePath === \"#\") {\n\t\t\treturn absolutePath;\n\t\t}\n\n\t\t// if it starts with a `/` then we will assume it is already a relative path\n\t\tif (absolutePath && absolutePath.startsWith(\"/\")) {\n\t\t\treturn absolutePath;\n\t\t}\n\n\t\tconst parsedUrl = new URL(absolutePath);\n\t\t// console.log('parsedUrl', parsedUrl);\n\t\treturn parsedUrl.pathname;\n\t} catch (ex) {\n\t\tconsole.error(`MakeRelativePath failed to create a valid URL. Returning absolutePath. absolutePath:${absolutePath}`, ex);\n\t\treturn absolutePath;\n\t}\n}\n\nexport function IsUrlExternal(absolutePath) {\n\ttry {\n\t\tif (absolutePath === \"#\") {\n\t\t\treturn false;\n\t\t}\n\n\t\t// if it starts with a `/` then we will assume it is an internal path\n\t\tif (absolutePath && absolutePath.startsWith(\"/\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst parsedUrl = new URL(absolutePath);\n\t\tif (parsedUrl.origin === window.location.origin) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// if using localhost and dev environment, links will have this URL, so treat them as internal links\n\t\tif (parsedUrl.origin === \"https://xenodochial-heyrovsky-68cf5e.netlify.com\" ||\n\t\t\tparsedUrl.origin === \"http://xenodochial-heyrovsky-68cf5e.netlify.com\") {\n\t\t\t\treturn false;\n\t\t}\n\t\treturn (parsedUrl.origin !== window.location.origin)\n\t} catch (ex) {\n\t\tconsole.error(`IsUrlExternal failed to create a valid URL. Returning false. absolutePath:${absolutePath}`, ex);\n\t\treturn false;\n\t}\n}\n\nexport function MakeInternalOrExternalLink(absolutePath, children, className, onClick, target) {\n\tif (IsUrlExternal(absolutePath)) {\n\t\treturn (\n\t\t\t<a href={absolutePath} target={target} className={className} onClick={onClick}>\n\t\t\t\t{children}\n\t\t\t</a>\n\t\t)\n\t} else {\n\t\tlet relativePath = MakeRelativePath(absolutePath);\n\t\treturn (\n\t\t\t<Link to={relativePath} target={target} className={className} onClick={onClick}>\n\t\t\t\t{children}\n\t\t\t</Link>\n\t\t)\n\t}\n}\n\nexport const InternalOrExternalLink = props => {\n\tconst { children, className, url, target, onClick } = props;\n\treturn MakeInternalOrExternalLink(url, children, className, onClick, target);\n}\n"]},"metadata":{},"sourceType":"module"}