{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useReducer, useEffect, useRef, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as queryString from 'query-string';\n\nvar isUndefinedOrNull = function (v) {\n  return v === undefined || v === null;\n};\n\nvar isSame = function (var1, var2) {\n  return var1 === var2 || !isUndefinedOrNull(var1) && !isUndefinedOrNull(var2) && var1.toString() === var2.toString();\n};\n\nvar TYPE_EMPTY_VALUE_MAP = {\n  'string': '',\n  'number': 0,\n  'boolean': false,\n  'array': []\n};\n\nvar isValidType = function (value, allowNullAndUndefined) {\n  if (allowNullAndUndefined === void 0) {\n    allowNullAndUndefined = false;\n  }\n\n  if (!(Array.isArray(value) || Object.keys(TYPE_EMPTY_VALUE_MAP).indexOf(typeof value) > -1 || allowNullAndUndefined && (value === null || value === undefined))) {\n    console.log('isValidType', value);\n    throw new Error('useQueryState: the type is not supported.');\n  }\n};\n\nvar LOCATION_CHANGE = 'LOCATION_CHANGE';\nvar STATE_CHANGE = 'STATE_CHANGE';\n\nvar reducer = function (state, action) {\n  var _a, _b;\n\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      {\n        var _c = action.payload,\n            currentQueryValue = _c.currentQueryValue,\n            key = _c.key;\n\n        if (!isSame(currentQueryValue, state[key])) {\n          var normalizedValue = currentQueryValue;\n\n          if (currentQueryValue === '') {\n            // i.e. ?a=\n            // fill in empty value based on type\n            normalizedValue = TYPE_EMPTY_VALUE_MAP[state.type];\n          } else if (state.type === 'array' && !Array.isArray(currentQueryValue)) {\n            // i.e. ?a=1\n            // for single elemnt\n            // tranform to array type\n            normalizedValue = [currentQueryValue];\n          }\n\n          return __assign(__assign({}, state), (_a = {}, _a[key] = normalizedValue, _a));\n        }\n\n        return state;\n      }\n\n    case STATE_CHANGE:\n      {\n        var _d = action.payload,\n            newValue = _d.newValue,\n            key = _d.key;\n        return __assign(__assign({}, state), (_b = {}, _b[key] = newValue, _b));\n      }\n  }\n};\n\nvar useQueryState = function (defaultValue, varName, _a) {\n  var _b;\n\n  var _c = _a === void 0 ? {} : _a,\n      _d = _c.action,\n      action = _d === void 0 ? 'push' : _d,\n      _e = _c.delay,\n      delay = _e === void 0 ? 0 : _e;\n\n  var location = useLocation();\n  var history = useHistory(); // get value type from defaultValue\n\n  isValidType(defaultValue);\n  var type = Array.isArray(defaultValue) ? 'array' : typeof defaultValue;\n\n  var _f = useReducer(reducer, (_b = {}, _b[varName] = defaultValue, _b.type = type, _b)),\n      state = _f[0],\n      dispatch = _f[1];\n\n  var timer = useRef();\n  var isPending = useRef(false);\n  var isChanged = useRef(false); // clear setTimeout\n\n  var clearTimer = useCallback(function () {\n    isPending.current = false;\n\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n  }, []); // push or replace history\n\n  var manipulateHistory = useCallback(function (func, delay) {\n    // debounce\n    isPending.current = true;\n\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    timer.current = setTimeout(function () {\n      isPending.current = false;\n      func();\n    }, delay);\n  }, []);\n  useEffect(function () {\n    // changing location\n    // sync state\n    if (!isPending.current) {\n      var search = location.search;\n      var parsedQuery = queryString.parse(search, {\n        arrayFormat: 'comma'\n      });\n      var queryValue = parsedQuery[varName]; // if query value is not supplied or state value is never changed\n      // preserve default value\n\n      if (queryValue !== undefined || isChanged.current) {\n        isChanged.current = true;\n        dispatch({\n          type: LOCATION_CHANGE,\n          payload: {\n            key: varName,\n            currentQueryValue: queryValue\n          }\n        });\n      }\n    }\n\n    return clearTimer;\n  }, [varName, location, clearTimer]);\n  var setVar = useCallback(function (newValue) {\n    var _a;\n\n    isValidType(newValue, true); // changing state\n    // sync location\n    // access location from history to ensure it is the most updated one\n\n    var _b = history.location,\n        search = _b.search,\n        pathname = _b.pathname;\n    var parsedQuery = queryString.parse(search, {\n      arrayFormat: 'comma'\n    });\n    var queryVar = parsedQuery[varName];\n\n    if (!isSame(queryVar, newValue)) {\n      var newSearch = \"?\" + queryString.stringify(__assign(__assign({}, parsedQuery), (_a = {}, _a[varName] = newValue, _a)), {\n        arrayFormat: 'comma'\n      }); // mutate history object synchronously\n\n      history.location.search = newSearch; // push or replace history state asynchronously\n\n      manipulateHistory(history[action].bind(null, \"\" + pathname + newSearch), delay);\n    } // sync state\n\n\n    dispatch({\n      type: STATE_CHANGE,\n      payload: {\n        key: varName,\n        newValue: newValue\n      }\n    });\n  }, [varName, action, delay, history, manipulateHistory]);\n  return [state[varName], setVar];\n};\n\nexport default useQueryState;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/node_modules/use-query-state/dist/esm/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useReducer","useEffect","useRef","useCallback","useLocation","useHistory","queryString","isUndefinedOrNull","v","undefined","isSame","var1","var2","toString","TYPE_EMPTY_VALUE_MAP","isValidType","value","allowNullAndUndefined","Array","isArray","keys","indexOf","console","log","Error","LOCATION_CHANGE","STATE_CHANGE","reducer","state","action","_a","_b","type","_c","payload","currentQueryValue","key","normalizedValue","_d","newValue","useQueryState","defaultValue","varName","_e","delay","location","history","_f","dispatch","timer","isPending","isChanged","clearTimer","current","clearTimeout","manipulateHistory","func","setTimeout","search","parsedQuery","parse","arrayFormat","queryValue","setVar","pathname","queryVar","newSearch","stringify","bind"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useReducer, useEffect, useRef, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as queryString from 'query-string';\nvar isUndefinedOrNull = function (v) { return v === undefined || v === null; };\nvar isSame = function (var1, var2) { return (var1 === var2\n    || (!isUndefinedOrNull(var1) && !isUndefinedOrNull(var2) && var1.toString() === var2.toString())); };\nvar TYPE_EMPTY_VALUE_MAP = {\n    'string': '',\n    'number': 0,\n    'boolean': false,\n    'array': []\n};\nvar isValidType = function (value, allowNullAndUndefined) {\n    if (allowNullAndUndefined === void 0) { allowNullAndUndefined = false; }\n    if (!(Array.isArray(value)\n        || Object.keys(TYPE_EMPTY_VALUE_MAP).indexOf(typeof value) > -1\n        || (allowNullAndUndefined && (value === null || value === undefined)))) {\n        console.log('isValidType', value);\n        throw new Error('useQueryState: the type is not supported.');\n    }\n};\nvar LOCATION_CHANGE = 'LOCATION_CHANGE';\nvar STATE_CHANGE = 'STATE_CHANGE';\nvar reducer = function (state, action) {\n    var _a, _b;\n    switch (action.type) {\n        case LOCATION_CHANGE: {\n            var _c = action.payload, currentQueryValue = _c.currentQueryValue, key = _c.key;\n            if (!isSame(currentQueryValue, state[key])) {\n                var normalizedValue = currentQueryValue;\n                if (currentQueryValue === '') {\n                    // i.e. ?a=\n                    // fill in empty value based on type\n                    normalizedValue = TYPE_EMPTY_VALUE_MAP[state.type];\n                }\n                else if (state.type === 'array' && !Array.isArray(currentQueryValue)) {\n                    // i.e. ?a=1\n                    // for single elemnt\n                    // tranform to array type\n                    normalizedValue = [currentQueryValue];\n                }\n                return __assign(__assign({}, state), (_a = {}, _a[key] = normalizedValue, _a));\n            }\n            return state;\n        }\n        case STATE_CHANGE: {\n            var _d = action.payload, newValue = _d.newValue, key = _d.key;\n            return __assign(__assign({}, state), (_b = {}, _b[key] = newValue, _b));\n        }\n    }\n};\nvar useQueryState = function (defaultValue, varName, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.action, action = _d === void 0 ? 'push' : _d, _e = _c.delay, delay = _e === void 0 ? 0 : _e;\n    var location = useLocation();\n    var history = useHistory();\n    // get value type from defaultValue\n    isValidType(defaultValue);\n    var type = Array.isArray(defaultValue) ? 'array' : typeof defaultValue;\n    var _f = useReducer(reducer, (_b = {}, _b[varName] = defaultValue, _b.type = type, _b)), state = _f[0], dispatch = _f[1];\n    var timer = useRef();\n    var isPending = useRef(false);\n    var isChanged = useRef(false);\n    // clear setTimeout\n    var clearTimer = useCallback(function () {\n        isPending.current = false;\n        if (timer.current) {\n            clearTimeout(timer.current);\n        }\n    }, []);\n    // push or replace history\n    var manipulateHistory = useCallback(function (func, delay) {\n        // debounce\n        isPending.current = true;\n        if (timer.current) {\n            clearTimeout(timer.current);\n        }\n        timer.current = setTimeout(function () {\n            isPending.current = false;\n            func();\n        }, delay);\n    }, []);\n    useEffect(function () {\n        // changing location\n        // sync state\n        if (!isPending.current) {\n            var search = location.search;\n            var parsedQuery = queryString.parse(search, { arrayFormat: 'comma' });\n            var queryValue = parsedQuery[varName];\n            // if query value is not supplied or state value is never changed\n            // preserve default value\n            if (queryValue !== undefined\n                || isChanged.current) {\n                isChanged.current = true;\n                dispatch({\n                    type: LOCATION_CHANGE,\n                    payload: {\n                        key: varName,\n                        currentQueryValue: queryValue\n                    }\n                });\n            }\n        }\n        return clearTimer;\n    }, [varName, location, clearTimer]);\n    var setVar = useCallback(function (newValue) {\n        var _a;\n        isValidType(newValue, true);\n        // changing state\n        // sync location\n        // access location from history to ensure it is the most updated one\n        var _b = history.location, search = _b.search, pathname = _b.pathname;\n        var parsedQuery = queryString.parse(search, { arrayFormat: 'comma' });\n        var queryVar = parsedQuery[varName];\n        if (!isSame(queryVar, newValue)) {\n            var newSearch = \"?\" + queryString.stringify(__assign(__assign({}, parsedQuery), (_a = {}, _a[varName] = newValue, _a)), {\n                arrayFormat: 'comma'\n            });\n            // mutate history object synchronously\n            history.location.search = newSearch;\n            // push or replace history state asynchronously\n            manipulateHistory(history[action].bind(null, \"\" + pathname + newSearch), delay);\n        }\n        // sync state\n        dispatch({\n            type: STATE_CHANGE,\n            payload: {\n                key: varName,\n                newValue: newValue\n            }\n        });\n    }, [varName, action, delay, history, manipulateHistory]);\n    return [state[varName], setVar];\n};\nexport default useQueryState;\n"]},"metadata":{},"sourceType":"module"}