{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\SinglePost\\\\PostBody.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SEO from '../../components/SEO';\nimport moment from 'moment';\nimport { CategoriesToString, GetFirstCategoryName } from '../../utils/CategoryHelpers';\nimport PostSidebar from './PostSidebar';\nimport PostShareButtons from './PostShareButtons';\nimport RecentPostsForCategory from '../../components/RecentPostsForCategory';\nimport ResourcesCTA from '../../components/FlexibleContent/ResourcesCTA';\n\nconst PostBody = props => {\n  const DefaultResourcesHeading = \"Resources\"; // used if resources are pulled in dynamically (VS specified by editor in post)\n\n  const {\n    postId,\n    title,\n    content,\n    date,\n    singlePostFields,\n    seo,\n    featuredImage\n  } = props;\n  const {\n    author\n  } = singlePostFields;\n  const newDate = moment(date).format(`MMMM D, YYYY`);\n  const categoryText = CategoriesToString(props.categories); // figure out the first category to pass to RecentPostsForCategory (shown if no resources specified)\n\n  let firstCategory = GetFirstCategoryName(props.categories); // get the heading to use for the Resources Section (either a default if auto-populated, or pulled from ACF if editor specified on blog post)\n\n  let resourcesHeading = DefaultResourcesHeading;\n\n  if (props.resourcesCta && props.resourcesCta.heading) {\n    resourcesHeading = props.resourcesCta.heading;\n  }\n\n  const baseClass = `single-post-body`;\n  const seoProps = {\n    featuredImage,\n    ...seo\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: baseClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SEO, Object.assign({}, seoProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `container ${baseClass}__inner`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-12\n\t\t\t\t\t\t\tcol-lg-7\n\t\t\t\t\t\t\t${baseClass}__content-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__title-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `subhead`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, categoryText), /*#__PURE__*/React.createElement(\"h4\", {\n    dangerouslySetInnerHTML: {\n      __html: title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: `post-date small`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  }, newDate), author ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: `post-span-divider`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"\\u2022\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: `post-author small`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, author)) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__body`,\n    dangerouslySetInnerHTML: {\n      __html: content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${baseClass}__share-buttons`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PostShareButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-12\n\t\t\t\t\t\t\tcol-lg-4\n\t\t\t\t\t\t\t${baseClass}__sidebar-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(PostSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  })))), // if the editor specified resource to show, then show them, otherwise show a RecentPostsForCategory module which will pull in recent related items\n  props.resourcesCta && props.resourcesCta.resources ? /*#__PURE__*/React.createElement(ResourcesCTA, {\n    heading: resourcesHeading,\n    resources: props.resourcesCta.resources,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }) : /*#__PURE__*/React.createElement(RecentPostsForCategory, {\n    heading: resourcesHeading,\n    category: firstCategory,\n    postIdToExclude: postId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }));\n};\n\nPostBody.propTypes = {\n  title: PropTypes.string\n};\nexport default PostBody;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/SinglePost/PostBody.js"],"names":["React","PropTypes","SEO","moment","CategoriesToString","GetFirstCategoryName","PostSidebar","PostShareButtons","RecentPostsForCategory","ResourcesCTA","PostBody","props","DefaultResourcesHeading","postId","title","content","date","singlePostFields","seo","featuredImage","author","newDate","format","categoryText","categories","firstCategory","resourcesHeading","resourcesCta","heading","baseClass","seoProps","__html","resources","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SEO from '../../components/SEO';\nimport moment from 'moment';\nimport { CategoriesToString, GetFirstCategoryName } from '../../utils/CategoryHelpers';\nimport PostSidebar from './PostSidebar';\nimport PostShareButtons from './PostShareButtons';\nimport RecentPostsForCategory from '../../components/RecentPostsForCategory';\nimport ResourcesCTA from '../../components/FlexibleContent/ResourcesCTA';\n\nconst PostBody = props => {\n\tconst DefaultResourcesHeading = \"Resources\"; // used if resources are pulled in dynamically (VS specified by editor in post)\n\tconst {\n\t\tpostId,\n\t\ttitle,\n\t\tcontent,\n\t\tdate,\n\t\tsinglePostFields,\n\t\tseo,\n\t\tfeaturedImage\n\t} = props;\n\tconst { author } = singlePostFields;\n\n\tconst newDate = moment(date).format(`MMMM D, YYYY`);\n\tconst categoryText = CategoriesToString(props.categories);\n\n\t// figure out the first category to pass to RecentPostsForCategory (shown if no resources specified)\n\tlet firstCategory = GetFirstCategoryName(props.categories);\n\n\t// get the heading to use for the Resources Section (either a default if auto-populated, or pulled from ACF if editor specified on blog post)\n\tlet resourcesHeading = DefaultResourcesHeading;\n\tif (props.resourcesCta && props.resourcesCta.heading){\n\t\tresourcesHeading = props.resourcesCta.heading;\n\t}\n\n\tconst baseClass = `single-post-body`;\n\tconst seoProps = { featuredImage, ...seo };\n\treturn (\n\t\t<div className={baseClass}>\n\t\t\t<SEO {...seoProps} />\n\t\t\t<div className={`container ${baseClass}__inner`}>\n\t\t\t\t<div className={`row`}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t`col-12\n\t\t\t\t\t\t\tcol-lg-7\n\t\t\t\t\t\t\t${baseClass}__content-container`\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={`${baseClass}__title-container`}>\n\t\t\t\t\t\t\t<span className={`subhead`}>{categoryText}</span>\n\t\t\t\t\t\t\t<h4 dangerouslySetInnerHTML={{__html: title}} />\n\t\t\t\t\t\t\t<span className={`post-date small`}>{newDate}</span>\n\t\t\t\t\t\t\t{ author ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<span className={`post-span-divider`}>&bull;</span>\n\t\t\t\t\t\t\t\t\t<span className={`post-author small`}>{author}</span>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${baseClass}__body`}\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: content}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${baseClass}__share-buttons`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PostShareButtons />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t`col-12\n\t\t\t\t\t\t\tcol-lg-4\n\t\t\t\t\t\t\t${baseClass}__sidebar-container`\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PostSidebar />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t// if the editor specified resource to show, then show them, otherwise show a RecentPostsForCategory module which will pull in recent related items\n\t\t\t\t(props.resourcesCta && props.resourcesCta.resources) ?\n\t\t\t\t\t<ResourcesCTA\n\t\t\t\t\t\theading={resourcesHeading}\n\t\t\t\t\t\tresources={props.resourcesCta.resources} />\n\t\t\t\t\t:\n\t\t\t\t\t<RecentPostsForCategory\n\t\t\t\t\t\theading={resourcesHeading}\n\t\t\t\t\t\tcategory={firstCategory}\n\t\t\t\t\t\tpostIdToExclude={postId} />\n\t\t\t}\n\t\t</div>\n\t);\n\n};\n\nPostBody.propTypes = {\n    title: PropTypes.string\n}\n\nexport default PostBody;\n"]},"metadata":{},"sourceType":"module"}