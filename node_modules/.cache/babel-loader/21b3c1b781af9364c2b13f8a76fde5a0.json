{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\templates\\\\ResourceArchive\\\\ResourceItem.js\";\nimport React from 'react';\nimport RightArrow from '../../assets/svgs/right-arrow';\nimport VideoEmbed from './VideoEmbed';\nimport GlobalConstants from '../../GlobalConstants';\nimport * as ResourceConstants from './ResourceConstants';\nimport { GetYoutubeID } from '../../utils/YouTubeHelpers';\nimport { TruncateText, UnescapeText } from '../../utils/TextHelpers';\nimport DefaultImage from '../../assets/images/resource-card-placeholder.jpg';\n\nconst ResourceItem = ({\n  title,\n  date,\n  excerpt,\n  featuredImage,\n  tagListing,\n  resourceDownloadUrl,\n  resourceType\n}) => {\n  title = UnescapeText(title);\n  tagListing = UnescapeText(tagListing);\n  excerpt = TruncateText(excerpt, GlobalConstants.resources.excerptMaxCharLength); // force a max length to the excerpt\n\n  const baseClass = `resource-section`;\n\n  const renderPodcast = () => {\n    const appearanceStyles = {\n      width: '100%',\n      height: '260px',\n      display: 'block',\n      transition: 'height 0.5s ease 0s'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${baseClass}__results-wrapper__item col-md-6 col-lg-4`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, featuredImage ? /*#__PURE__*/React.createElement(\"img\", {\n      src: featuredImage.mediaItemUrl,\n      alt: featuredImage.altText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: DefaultImage,\n      alt: ``,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subhead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }\n    }, tagListing)), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"h8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, title), excerpt ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"excerpt\",\n      dangerouslySetInnerHTML: {\n        __html: excerpt\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"iframe\", {\n      title: `podcast-${title}`,\n      allow: \"fullscreen\",\n      allowFullScreen: \"\",\n      width: \"100%\",\n      scrolling: \"no\",\n      frameBorder: \"no\",\n      src: `${resourceDownloadUrl}`,\n      style: appearanceStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  const renderVideo = () => {\n    const ytVideoId = GetYoutubeID(resourceDownloadUrl);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${baseClass}__results-wrapper__item col-md-6 col-lg-4`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, ytVideoId ? /*#__PURE__*/React.createElement(VideoEmbed, {\n      imageOverlay: featuredImage,\n      ytVideoId: ytVideoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, \"Invalid YouTube URL: \", resourceDownloadUrl), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subhead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, tagListing)), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"h8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, title), excerpt ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"excerpt\",\n      dangerouslySetInnerHTML: {\n        __html: excerpt\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }; // default resource type (used for types that link to an asset like a PDF)\n\n\n  const renderGeneric = showFeaturedImage => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${baseClass}__results-wrapper__item col-md-6 col-lg-4`,\n      onClick: () => window.open(resourceDownloadUrl, \"_blank\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, showFeaturedImage && featuredImage ? /*#__PURE__*/React.createElement(\"img\", {\n      src: featuredImage.mediaItemUrl,\n      alt: featuredImage.altText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: DefaultImage,\n      alt: ``,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subhead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }, tagListing)), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"h8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, UnescapeText(title)), excerpt ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"excerpt\",\n      dangerouslySetInnerHTML: {\n        __html: excerpt\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${baseClass}__results-wrapper__item__arrow-button`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(RightArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    })));\n  }; // console.log(resourceType);\n\n\n  if (resourceType.PostType === ResourceConstants.Podcasts.PostType) {\n    return renderPodcast();\n  } else if (resourceType.PostType === ResourceConstants.Videos.PostType) {\n    return renderVideo();\n  } else if ( // we don't show featured images for some types\n  resourceType.PostType === ResourceConstants.Infographics.PostType || resourceType.PostType === ResourceConstants.WhitePapers.PostType) {\n    return renderGeneric(true);\n  } else if (resourceType.PostType === ResourceConstants.Guides.PostType) {\n    return renderGeneric(true);\n  } else {\n    return renderGeneric(true);\n  }\n};\n\nexport default ResourceItem;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/templates/ResourceArchive/ResourceItem.js"],"names":["React","RightArrow","VideoEmbed","GlobalConstants","ResourceConstants","GetYoutubeID","TruncateText","UnescapeText","DefaultImage","ResourceItem","title","date","excerpt","featuredImage","tagListing","resourceDownloadUrl","resourceType","resources","excerptMaxCharLength","baseClass","renderPodcast","appearanceStyles","width","height","display","transition","mediaItemUrl","altText","__html","renderVideo","ytVideoId","renderGeneric","showFeaturedImage","window","open","PostType","Podcasts","Videos","Infographics","WhitePapers","Guides"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RightArrow from '../../assets/svgs/right-arrow';\nimport VideoEmbed from './VideoEmbed';\nimport GlobalConstants from '../../GlobalConstants';\nimport * as ResourceConstants from './ResourceConstants';\nimport { GetYoutubeID } from '../../utils/YouTubeHelpers';\nimport { TruncateText, UnescapeText } from '../../utils/TextHelpers';\nimport DefaultImage from '../../assets/images/resource-card-placeholder.jpg';\n\nconst ResourceItem = ({\n\ttitle,\n\tdate,\n\texcerpt,\n\tfeaturedImage,\n\ttagListing,\n\tresourceDownloadUrl,\n\tresourceType }) => {\n\n\ttitle = UnescapeText(title);\n\ttagListing = UnescapeText(tagListing);\n\texcerpt = TruncateText(excerpt, GlobalConstants.resources.excerptMaxCharLength); // force a max length to the excerpt\n\n\tconst baseClass = `resource-section`;\n\n\tconst renderPodcast = () => {\n\t\tconst appearanceStyles = {\n\t\t\twidth: '100%',\n\t\t\theight: '260px',\n\t\t\tdisplay: 'block',\n\t\t\ttransition: 'height 0.5s ease 0s'\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={`${baseClass}__results-wrapper__item col-md-6 col-lg-4`}>\n\t\t\t\t{(featuredImage) ?\n\t\t\t\t\t<img src={featuredImage.mediaItemUrl}\n\t\t\t\t\t\talt={featuredImage.altText} />\n\t\t\t\t\t:\n\t\t\t\t\t<img src={DefaultImage} alt={``} />\n\t\t\t\t}\n\t\t\t\t<p><span className=\"subhead\">{tagListing}</span></p>\n\t\t\t\t<h6 className=\"h8\">{title}</h6>\n\t\t\t\t{excerpt ?\n\t\t\t\t\t<p className=\"excerpt\" dangerouslySetInnerHTML={{ __html: excerpt }} />\n\t\t\t\t\t:\n\t\t\t\t\t<></>\n\t\t\t\t}\n\t\t\t\t<iframe\n\t\t\t\t\ttitle={`podcast-${title}`}\n\t\t\t\t\tallow=\"fullscreen\" allowFullScreen=\"\" width=\"100%\" scrolling=\"no\" frameBorder=\"no\"\n\t\t\t\t\tsrc={`${resourceDownloadUrl}`}\n\t\t\t\t\tstyle={appearanceStyles}>\n\t\t\t\t</iframe>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderVideo = () => {\n\t\tconst ytVideoId = GetYoutubeID(resourceDownloadUrl);\n\n\t\treturn (\n\t\t\t<div className={`${baseClass}__results-wrapper__item col-md-6 col-lg-4`}>\n\t\t\t\t{ytVideoId ?\n\t\t\t\t\t<VideoEmbed\n\t\t\t\t\t\timageOverlay={featuredImage}\n\t\t\t\t\t\tytVideoId={ytVideoId} />\n\t\t\t\t\t:\n\t\t\t\t\t<div className=\"error\">Invalid YouTube URL: {resourceDownloadUrl}</div>\n\t\t\t\t}\n\t\t\t\t<p><span className=\"subhead\">{tagListing}</span></p>\n\t\t\t\t<h6 className=\"h8\">{title}</h6>\n\t\t\t\t{excerpt ?\n\t\t\t\t\t<p className=\"excerpt\" dangerouslySetInnerHTML={{ __html: excerpt }} />\n\t\t\t\t\t:\n\t\t\t\t\t<></>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// default resource type (used for types that link to an asset like a PDF)\n\tconst renderGeneric = (showFeaturedImage) => {\n\t\treturn (\n\t\t\t<div className={`${baseClass}__results-wrapper__item col-md-6 col-lg-4`}\n\t\t\t\tonClick={() => window.open(resourceDownloadUrl, \"_blank\")}>\n\t\t\t\t<div className='imgWrapper'>\n\t\t\t\t\t{(showFeaturedImage && featuredImage) ?\n\t\t\t\t\t\t<img src={featuredImage.mediaItemUrl}\n\t\t\t\t\t\t\talt={featuredImage.altText} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<img src={DefaultImage} alt={``} />\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<p><span className=\"subhead\">{tagListing}</span></p>\n\t\t\t\t<h6 className=\"h8\">{UnescapeText(title)}</h6>\n\t\t\t\t{excerpt ?\n\t\t\t\t\t<p className=\"excerpt\" dangerouslySetInnerHTML={{ __html: excerpt }} />\n\t\t\t\t\t:\n\t\t\t\t\t<></>\n\t\t\t\t}\n\n\t\t\t\t{/* wire up to open PDF (or blog URL for articles) in a new tab */}\n\t\t\t\t<div className={`${baseClass}__results-wrapper__item__arrow-button`}>\n\t\t\t\t\t<RightArrow />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// console.log(resourceType);\n\n\tif (resourceType.PostType === ResourceConstants.Podcasts.PostType) {\n\t\treturn (\n\t\t\trenderPodcast()\n\t\t);\n\t} else if (resourceType.PostType === ResourceConstants.Videos.PostType) {\n\t\treturn (\n\t\t\trenderVideo()\n\t\t)\n\t} else if (\n\t\t// we don't show featured images for some types\n\t\t(resourceType.PostType === ResourceConstants.Infographics.PostType) ||\n\t\t(resourceType.PostType === ResourceConstants.WhitePapers.PostType)) {\n\t\treturn (\n\t\t\trenderGeneric(true)\n\t\t)\n\t} else if(resourceType.PostType === ResourceConstants.Guides.PostType) {\n\t\treturn (\n\t\t\trenderGeneric(true)\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\trenderGeneric(true)\n\t\t)\n\t}\n}\n\nexport default ResourceItem;\n"]},"metadata":{},"sourceType":"module"}