{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Select.jsx\";\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nexport default (({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  cssClass,\n  unsetError,\n  setCurrentFocus,\n  setFocusClass,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    isRequired,\n    choices,\n    placeholder,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName\n  } = field;\n  let selected = null; // Map options\n\n  const options = choices.map(choice => {\n    const item = {\n      value: choice.value,\n      label: choice.text\n    };\n\n    if (choice.isSelected) {\n      selected = item;\n    }\n\n    return item;\n  }); // Handle State\n\n  const [selectedOption, selectOption] = useState(value || selected); // Handle change\n\n  const handleChange = option => {\n    selectOption(option);\n    const event = {\n      target: {\n        value: option\n      }\n    };\n    updateForm(event, field);\n    setFocusClass(!!option);\n  }; // Handle Blur\n\n\n  const handleBlur = () => {\n    const event = {\n      target: {\n        value: selectedOption\n      }\n    };\n    updateForm(event, field);\n    setTouched(id);\n  };\n\n  const {\n    ReactSelect,\n    Label = \"label\",\n    Box = \"div\"\n  } = styledComponents || false;\n  const RSelect = ReactSelect || Select;\n  return /*#__PURE__*/React.createElement(Box, {\n    width: width,\n    className: validationMessage && touched || error ? `form-field error ${cssClass}` : `form-field ${cssClass}`,\n    style: {\n      display: hideField ? \"none\" : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: `input_${formId}_${id}`,\n    className: `gf-label ${labelPlacement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, label, isRequired ? /*#__PURE__*/React.createElement(\"abbr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"*\") : null), descriptionPlacement === \"above\" && description ? description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }\n  }, description) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RSelect, {\n    name: customName || `input_${id}`,\n    required: isRequired,\n    value: selectedOption,\n    onChange: option => {\n      handleChange(option, field);\n      unsetError(id);\n    },\n    onBlur: () => {\n      handleBlur();\n      setCurrentFocus(false);\n    },\n    onFocus: () => {\n      setFocusClass(true);\n      setCurrentFocus(true);\n    },\n    placeholder: placeholder,\n    options: options,\n    className: \"form-select\" // styles={customStyles}\n    ,\n    inputId: `input_${formId}_${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, description)), (validationMessage && touched || error) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    id: `error_${formId}_${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, validationMessage || error)));\n});","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Select.jsx"],"names":["React","useState","Select","field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","cssClass","unsetError","setCurrentFocus","setFocusClass","props","id","formId","type","label","isRequired","choices","placeholder","description","descriptionPlacement","labelPlacement","width","customName","selected","options","map","choice","item","text","isSelected","selectedOption","selectOption","handleChange","option","event","target","handleBlur","ReactSelect","Label","Box","RSelect","display","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\n\nexport default ({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  cssClass,\n  unsetError,\n  setCurrentFocus,\n  setFocusClass,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    isRequired,\n    choices,\n    placeholder,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName\n  } = field;\n\n  let selected = null;\n  // Map options\n  const options = choices.map(choice => {\n    const item = {\n      value: choice.value,\n      label: choice.text\n    };\n    if (choice.isSelected) {\n      selected = item;\n    }\n    return item;\n  });\n  // Handle State\n  const [selectedOption, selectOption] = useState(value || selected);\n  // Handle change\n  const handleChange = option => {\n    selectOption(option);\n    const event = {\n      target: {\n        value: option\n      }\n    };\n    updateForm(event, field);\n    setFocusClass(!!option);\n  };\n  // Handle Blur\n  const handleBlur = () => {\n    const event = {\n      target: {\n        value: selectedOption\n      }\n    };\n    updateForm(event, field);\n    setTouched(id);\n  };\n  const { ReactSelect, Label = \"label\", Box = \"div\" } =\n    styledComponents || false;\n\n  const RSelect = ReactSelect || Select;\n  return (\n    <Box\n      width={width}\n      className={\n        (validationMessage && touched) || error\n          ? `form-field error ${cssClass}`\n          : `form-field ${cssClass}`\n      }\n      style={{ display: hideField ? \"none\" : undefined }}\n    >\n      <div className={type}>\n        <Label\n          htmlFor={`input_${formId}_${id}`}\n          className={`gf-label ${labelPlacement}`}\n        >\n          { label }\n          {isRequired ? <abbr>*</abbr> : null}\n        </Label>\n        {descriptionPlacement === \"above\" && description ? (\n          description && <div className=\"description\">{description}</div>\n        ) : (\n          <React.Fragment>\n            <RSelect\n              name={customName || `input_${id}`}\n              required={isRequired}\n              value={selectedOption}\n              onChange={option => {\n                handleChange(option, field);\n                unsetError(id);\n\n              }}\n              onBlur={() => {\n                handleBlur();\n                setCurrentFocus(false);\n              }}\n              onFocus={() => {\n                setFocusClass(true);\n                setCurrentFocus(true);\n              }}\n              placeholder={placeholder}\n              options={options}\n              className=\"form-select\"\n              // styles={customStyles}\n              inputId={`input_${formId}_${id}`}\n            />\n            {description && <div className=\"description\">{description}</div>}\n          </React.Fragment>\n        )}\n        {((validationMessage && touched) || error) && (\n          <span className=\"error-message\" id={`error_${formId}_${id}`}>\n            {validationMessage || error}\n          </span>\n        )}\n      </div>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}