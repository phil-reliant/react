{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\LeadGenFormAndPanel\\\\index.js\";\nimport React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from \"prop-types\";\nimport SlideOutArea from '../LeadGenFormAndPanel/SlideOutArea';\nimport StickyDrawerWrapper from './StickyDrawerWrapper';\nimport gql from 'graphql-tag';\n/*\nStructure:\n\nComponents:\n- index.js - main control (contains sticky bar as well as slide-out area)\n-- StickyDrawerWrapper.js (wraps side and bottom sticky bars)\n--- StickyDrawerBottom.js - version of control shown on mobile (stuck to bottom)\n--- StickyDrawerSide.js - version of control shown on desktop (stuck to side)\n\nChild-components (used by both bottom and side sticky bars)\n- InterestSelectionForm - selection fields shown on panel 1 (ex: Consultation, Hardware, etc.)\n- DetailForm.js - detail fields shown on panel 2 (ex: First name, Last name, etc.)\n\nConstants:\n- InterestDefinitions.js - where selectable interests are defined (first panel)\n- FieldDefinitions.js - where input fields are defined (second panel)\n*/\n\nconst LEAD_GEN_QUERY = postType => gql`\n\t\tquery LEAD_GEN_${postType.toUpperCase()}_QUERY($postSlug: String!) {\n\t\t\t${postType}By (uri:$postSlug) {\n\t\t\t\tlead_gen_settings {\n\t\t\t\t\tshowForm\n\t\t\t\t\tslideOutAreaText\n\t\t\t\t\tbackgroundImage {\n\t\t\t\t\t\tmediaItemUrl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n\nconst LeadGenFormAndPanel = props => {\n  const {\n    postType\n  } = props;\n  const {\n    match\n  } = props;\n  const {\n    slug\n  } = match ? match.params : ``;\n  let route = slug;\n\n  if (!slug) {\n    route = `home`;\n  }\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LEAD_GEN_QUERY(postType), {\n    variables: {\n      postSlug: route\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (error) {\n    console.log('LeadGenFormAndPanel error', error);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }\n    }, \"Error loading LeadGenFormAndPanel\");\n  }\n\n  if (!data[`${postType}By`]) {\n    console.warn('LeadGenFormAndPanel unable to find data (ex: could happen on a 404 page).');\n    return null;\n  }\n\n  var showLeadGenForm = false;\n  var leadGenFormSlideOutAreaText = \"\";\n  var backgroundImageOverride = null;\n\n  if (data[`${postType}By`] && data[`${postType}By`].lead_gen_settings) {\n    const leadGenSettings = data[`${postType}By`].lead_gen_settings;\n    showLeadGenForm = leadGenSettings.showForm;\n    leadGenFormSlideOutAreaText = leadGenSettings.slideOutAreaText;\n    backgroundImageOverride = leadGenSettings.backgroundImage;\n  }\n\n  if (showLeadGenForm == null) {\n    showLeadGenForm = false;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showLeadGenForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"--desktop-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SlideOutArea, {\n    slideOutAreaText: leadGenFormSlideOutAreaText,\n    backgroundImage: backgroundImageOverride,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  })) : null, /*#__PURE__*/React.createElement(StickyDrawerWrapper, {\n    showFormArea: showLeadGenForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }));\n};\n\nLeadGenFormAndPanel.propTypes = {\n  slug: PropTypes.string,\n  postType: PropTypes.string\n};\nexport default LeadGenFormAndPanel;","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/LeadGenFormAndPanel/index.js"],"names":["React","useQuery","PropTypes","SlideOutArea","StickyDrawerWrapper","gql","LEAD_GEN_QUERY","postType","toUpperCase","LeadGenFormAndPanel","props","match","slug","params","route","loading","error","data","variables","postSlug","console","log","warn","showLeadGenForm","leadGenFormSlideOutAreaText","backgroundImageOverride","lead_gen_settings","leadGenSettings","showForm","slideOutAreaText","backgroundImage","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA;;;;;;;;;;;;;;;;;;AAkBA,MAAMC,cAAc,GAAIC,QAAD,IACtBF,GAAI;mBACcE,QAAQ,CAACC,WAAT,EAAuB;KACrCD,QAAS;;;;;;;;;;EAHd;;AAiBA,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AACtC,QAAM;AAAEH,IAAAA;AAAF,MAAeG,KAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWD,KAAK,GAAGA,KAAK,CAACE,MAAT,GAAmB,EAAzC;AAEA,MAAIC,KAAK,GAAGF,IAAZ;;AAEA,MAAI,CAACA,IAAL,EAAW;AACVE,IAAAA,KAAK,GAAI,MAAT;AACA;;AAED,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BhB,QAAQ,CAACK,cAAc,CAACC,QAAD,CAAf,EAA2B;AACnEW,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAEL;AAAZ;AADwD,GAA3B,CAAzC;;AAIA,MAAIC,OAAJ,EAAa;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACD,MAAIC,KAAJ,EAAW;AACVI,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCL,KAAzC;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AACA;;AACD,MAAI,CAACC,IAAI,CAAE,GAAEV,QAAS,IAAb,CAAT,EAA4B;AAC3Ba,IAAAA,OAAO,CAACE,IAAR,CAAa,2EAAb;AACA,WAAO,IAAP;AACA;;AAED,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,2BAA2B,GAAG,EAAlC;AACA,MAAIC,uBAAuB,GAAG,IAA9B;;AACA,MAAIR,IAAI,CAAE,GAAEV,QAAS,IAAb,CAAJ,IAAyBU,IAAI,CAAE,GAAEV,QAAS,IAAb,CAAJ,CAAsBmB,iBAAnD,EAAsE;AACrE,UAAMC,eAAe,GAAGV,IAAI,CAAE,GAAEV,QAAS,IAAb,CAAJ,CAAsBmB,iBAA9C;AACAH,IAAAA,eAAe,GAAGI,eAAe,CAACC,QAAlC;AACAJ,IAAAA,2BAA2B,GAAGG,eAAe,CAACE,gBAA9C;AACAJ,IAAAA,uBAAuB,GAAGE,eAAe,CAACG,eAA1C;AACA;;AAED,MAAIP,eAAe,IAAI,IAAvB,EAA6B;AAC5BA,IAAAA,eAAe,GAAG,KAAlB;AACA;;AAED,sBACC,0CACEA,eAAe,gBACf;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AAAc,IAAA,gBAAgB,EAAEC,2BAAhC;AACC,IAAA,eAAe,EAAEC,uBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADe,GAKb,IANJ,eASC,oBAAC,mBAAD;AAAqB,IAAA,YAAY,EAAEF,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAaA,CAtDD;;AAwDAd,mBAAmB,CAACsB,SAApB,GAAgC;AAC/BnB,EAAAA,IAAI,EAAEV,SAAS,CAAC8B,MADe;AAE/BzB,EAAAA,QAAQ,EAAEL,SAAS,CAAC8B;AAFW,CAAhC;AAKA,eAAevB,mBAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from \"prop-types\";\nimport SlideOutArea from '../LeadGenFormAndPanel/SlideOutArea';\nimport StickyDrawerWrapper from './StickyDrawerWrapper';\nimport gql from 'graphql-tag';\n\n/*\nStructure:\n\nComponents:\n- index.js - main control (contains sticky bar as well as slide-out area)\n-- StickyDrawerWrapper.js (wraps side and bottom sticky bars)\n--- StickyDrawerBottom.js - version of control shown on mobile (stuck to bottom)\n--- StickyDrawerSide.js - version of control shown on desktop (stuck to side)\n\nChild-components (used by both bottom and side sticky bars)\n- InterestSelectionForm - selection fields shown on panel 1 (ex: Consultation, Hardware, etc.)\n- DetailForm.js - detail fields shown on panel 2 (ex: First name, Last name, etc.)\n\nConstants:\n- InterestDefinitions.js - where selectable interests are defined (first panel)\n- FieldDefinitions.js - where input fields are defined (second panel)\n*/\n\nconst LEAD_GEN_QUERY = (postType) => (\n\tgql`\n\t\tquery LEAD_GEN_${postType.toUpperCase()}_QUERY($postSlug: String!) {\n\t\t\t${postType}By (uri:$postSlug) {\n\t\t\t\tlead_gen_settings {\n\t\t\t\t\tshowForm\n\t\t\t\t\tslideOutAreaText\n\t\t\t\t\tbackgroundImage {\n\t\t\t\t\t\tmediaItemUrl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`\n);\n\n\nconst LeadGenFormAndPanel = (props) => {\n\tconst { postType } = props;\n\tconst { match } = props;\n\tconst { slug } = match ? match.params : ``;\n\n\tlet route = slug;\n\n\tif (!slug) {\n\t\troute = `home`;\n\t}\n\n\tconst { loading, error, data } = useQuery(LEAD_GEN_QUERY(postType), {\n\t\tvariables: { postSlug: route }\n\t});\n\n\tif (loading) {\n\t\treturn <p></p>\n\t}\n\tif (error) {\n\t\tconsole.log('LeadGenFormAndPanel error', error);\n\t\treturn <p>Error loading LeadGenFormAndPanel</p>;\n\t}\n\tif (!data[`${postType}By`]) {\n\t\tconsole.warn('LeadGenFormAndPanel unable to find data (ex: could happen on a 404 page).');\n\t\treturn null;\n\t}\n\n\tvar showLeadGenForm = false;\n\tvar leadGenFormSlideOutAreaText = \"\";\n\tvar backgroundImageOverride = null;\n\tif (data[`${postType}By`] && data[`${postType}By`].lead_gen_settings) {\n\t\tconst leadGenSettings = data[`${postType}By`].lead_gen_settings;\n\t\tshowLeadGenForm = leadGenSettings.showForm;\n\t\tleadGenFormSlideOutAreaText = leadGenSettings.slideOutAreaText;\n\t\tbackgroundImageOverride = leadGenSettings.backgroundImage;\n\t}\n\n\tif (showLeadGenForm == null) {\n\t\tshowLeadGenForm = false;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showLeadGenForm ?\n\t\t\t\t<div className=\"--desktop-only\">\n\t\t\t\t\t<SlideOutArea slideOutAreaText={leadGenFormSlideOutAreaText}\n\t\t\t\t\t\tbackgroundImage={backgroundImageOverride} />\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\n\t\t\t<StickyDrawerWrapper showFormArea={showLeadGenForm} />\n\t\t</>\n\t);\n}\n\nLeadGenFormAndPanel.propTypes = {\n\tslug: PropTypes.string,\n\tpostType: PropTypes.string\n};\n\nexport default LeadGenFormAndPanel;\n"]},"metadata":{},"sourceType":"module"}