{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Password.jsx\";\nimport React, { useState } from 'react';\nexport default (({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    placeholder,\n    isRequired,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName,\n    inputs,\n    cssClass,\n    passwordStrengthEnabled\n  } = field;\n  const {\n    Input = 'input',\n    Label = 'label',\n    Box = 'div'\n  } = styledComponents || false;\n  const [passwords, setPasswords] = useState(inputs);\n  const [passwordStrength, setPasswordStrength] = useState('blank');\n\n  const setFocusClass = (action, i) => {\n    const pass = { ...passwords\n    };\n\n    if (action) {\n      pass[i].cssClass = 'filled';\n    } else {\n      pass[i].cssClass = '';\n    }\n\n    setPasswords(pass);\n  };\n\n  const gformPasswordStrength = password1 => {\n    let symbolSize = 0;\n    let natLog;\n    let score;\n    if (password1.length <= 0) return 'blank'; // password < 4\n\n    if (password1.length < 4) return 'short';\n    if (password1.match(/[0-9]/)) symbolSize += 10;\n    if (password1.match(/[a-z]/)) symbolSize += 26;\n    if (password1.match(/[A-Z]/)) symbolSize += 26;\n    if (password1.match(/[^a-zA-Z0-9]/)) symbolSize += 31;\n    natLog = Math.log(Math.pow(symbolSize, password1.length));\n    score = natLog / Math.LN2;\n    if (score < 40) return 'bad';\n    if (score < 56) return 'good';\n    return 'strong';\n  };\n\n  const setGFPwdStrength = password => {\n    const result = gformPasswordStrength(password);\n    setPasswordStrength(result);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    width: width,\n    className: validationMessage && touched || error ? `form-field error ${cssClass}` : `form-field ${cssClass}`,\n    style: {\n      display: hideField ? 'none' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: `gf-label ${labelPlacement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, label, isRequired ? /*#__PURE__*/React.createElement(\"abbr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"*\") : null), descriptionPlacement === 'above' && description ? description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }\n  }, description) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ginput_container ginput_container_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, inputs && inputs.length && inputs.map((input, i) => /*#__PURE__*/React.createElement(\"span\", {\n    key: `input_${formId}_${input.id}`,\n    className: `${inputs.length > 1 ? `ginput_${i === 0 ? 'left' : 'right'}` : 'medim'} ${passwords[i].cssClass ? passwords[i].cssClass : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: `input_${formId}_${input.id}_${i}`,\n    name: customName || `input_${id}${i === 1 ? `_${i + 1}` : ''}`,\n    type: type,\n    value: value && value[i] && value[i].val ? value[i].val : '',\n    placeholder: input.placeholder ? input.placeholder : placeholder,\n    required: isRequired,\n    autoComplete: \"off\",\n    onChange: event => {\n      field.subId = i;\n      updateForm(event, field);\n      unsetError(id);\n\n      if (passwordStrengthEnabled && i === 0) {\n        setGFPwdStrength(event.target.value);\n      }\n    },\n    onBlur: event => {\n      field.subId = i;\n      updateForm(event, field);\n      setTouched(id);\n      setFocusClass(value && value[i] && value[i].val && value[i].val !== '', i);\n    },\n    onFocus: () => setFocusClass(true, i),\n    \"aria-label\": label,\n    \"aria-describedby\": `error_${formId}_${input.id}_${i}`,\n    \"aria-invalid\": !!validationMessage && touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `input_${formId}_${input.id}_${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, input.label)))), (validationMessage && touched || error) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    id: `error_${formId}_${id}`,\n    dangerouslySetInnerHTML: {\n      __html: validationMessage || error\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    dangerouslySetInnerHTML: {\n      __html: description.replace(/\\n/g, '<br />')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), !(validationMessage && touched || error) && passwordStrengthEnabled && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: `input_${formId}_${id}_strength_indicator`,\n    className: `gfield_password_strength ${passwordStrength}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, passwordStrength && passwordStrength !== 'blank' ? passwordStrength : 'Strength indicator'), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    className: \"gform_hidden\",\n    id: `input_${formId}_${id}_strength`,\n    name: `input_${id}_strength`,\n    value: passwordStrength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }))));\n});","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Password.jsx"],"names":["React","useState","field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","id","formId","type","label","placeholder","isRequired","description","descriptionPlacement","labelPlacement","width","customName","inputs","cssClass","passwordStrengthEnabled","Input","Label","Box","passwords","setPasswords","passwordStrength","setPasswordStrength","setFocusClass","action","i","pass","gformPasswordStrength","password1","symbolSize","natLog","score","length","match","Math","log","pow","LN2","setGFPwdStrength","password","result","display","undefined","map","input","val","event","subId","target","__html","replace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport default ({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n}) => {\n  const {\n    id,\n    formId,\n    type,\n    label,\n    placeholder,\n    isRequired,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName,\n    inputs,\n    cssClass,\n    passwordStrengthEnabled,\n  } = field;\n\n  const { Input = 'input', Label = 'label', Box = 'div' } = styledComponents || false;\n\n  const [passwords, setPasswords] = useState(inputs);\n  const [passwordStrength, setPasswordStrength] = useState('blank');\n\n  const setFocusClass = (action, i) => {\n    const pass = { ...passwords };\n    if (action) {\n      pass[i].cssClass = 'filled';\n    } else {\n      pass[i].cssClass = '';\n    }\n    setPasswords(pass);\n  };\n\n  const gformPasswordStrength = (password1) => {\n    let symbolSize = 0;\n    let natLog;\n    let score;\n\n    if (password1.length <= 0) return 'blank';\n\n    // password < 4\n    if (password1.length < 4) return 'short';\n\n    if (password1.match(/[0-9]/)) symbolSize += 10;\n    if (password1.match(/[a-z]/)) symbolSize += 26;\n    if (password1.match(/[A-Z]/)) symbolSize += 26;\n    if (password1.match(/[^a-zA-Z0-9]/)) symbolSize += 31;\n\n    natLog = Math.log(Math.pow(symbolSize, password1.length));\n    score = natLog / Math.LN2;\n\n    if (score < 40) return 'bad';\n\n    if (score < 56) return 'good';\n\n    return 'strong';\n  };\n\n  const setGFPwdStrength = (password) => {\n    const result = gformPasswordStrength(password);\n    setPasswordStrength(result);\n  };\n\n  return (\n    <Box\n      width={width}\n      className={\n        (validationMessage && touched) || error\n          ? `form-field error ${cssClass}`\n          : `form-field ${cssClass}`\n      }\n      style={{ display: hideField ? 'none' : undefined }}\n    >\n      <div className={type}>\n        <Label className={`gf-label ${labelPlacement}`}>\n          {label}\n          {isRequired ? <abbr>*</abbr> : null}\n        </Label>\n        {descriptionPlacement === 'above' && description ? (\n          description && <div className=\"description\">{description}</div>\n        ) : (\n          <div className=\"ginput_container ginput_container_password\">\n            {inputs &&\n              inputs.length &&\n              inputs.map((input, i) => (\n                <span\n                  key={`input_${formId}_${input.id}`}\n                  className={`${\n                    inputs.length > 1 ? `ginput_${i === 0 ? 'left' : 'right'}` : 'medim'\n                  } ${passwords[i].cssClass ? passwords[i].cssClass : ''}`}\n                >\n                  <Input\n                    id={`input_${formId}_${input.id}_${i}`}\n                    name={customName || `input_${id}${i === 1 ? `_${i + 1}` : ''}`}\n                    type={type}\n                    value={value && value[i] && value[i].val ? value[i].val : ''}\n                    placeholder={input.placeholder ? input.placeholder : placeholder}\n                    required={isRequired}\n                    autoComplete=\"off\"\n                    onChange={(event) => {\n                      field.subId = i;\n                      updateForm(event, field);\n                      unsetError(id);\n                      if (passwordStrengthEnabled && i === 0) {\n                        setGFPwdStrength(event.target.value);\n                      }\n                    }}\n                    onBlur={(event) => {\n                      field.subId = i;\n                      updateForm(event, field);\n                      setTouched(id);\n                      setFocusClass(value && value[i] && value[i].val && value[i].val !== '', i);\n                    }}\n                    onFocus={() => setFocusClass(true, i)}\n                    aria-label={label}\n                    aria-describedby={`error_${formId}_${input.id}_${i}`}\n                    aria-invalid={!!validationMessage && touched}\n                  />\n                  <label htmlFor={`input_${formId}_${input.id}_${i}`}>{input.label}</label>\n                </span>\n              ))}\n          </div>\n        )}\n        {((validationMessage && touched) || error) && (\n          <span\n            className=\"error-message\"\n            id={`error_${formId}_${id}`}\n            dangerouslySetInnerHTML={{ __html: validationMessage || error }}\n          />\n        )}\n        {description && (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description.replace(/\\n/g, '<br />') }}\n          />\n        )}\n        {!((validationMessage && touched) || error) && passwordStrengthEnabled && (\n          <React.Fragment>\n            <div\n              id={`input_${formId}_${id}_strength_indicator`}\n              className={`gfield_password_strength ${passwordStrength}`}\n            >\n              {passwordStrength && passwordStrength !== 'blank'\n                ? passwordStrength\n                : 'Strength indicator'}\n            </div>\n            <input\n              type=\"hidden\"\n              className=\"gform_hidden\"\n              id={`input_${formId}_${id}_strength`}\n              name={`input_${id}_strength`}\n              value={passwordStrength}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}