{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phil\\\\OneDrive\\\\Documents\\\\reliant\\\\code\\\\narwhal-digital-reliant-wp\\\\src\\\\components\\\\GravityForms\\\\Fields\\\\Consent.jsx\";\nimport React from 'react';\nexport default (({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    label,\n    inputs,\n    cssClass,\n    isRequired,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName,\n    checkboxLabel\n  } = field;\n  const {\n    Consent = 'div',\n    Label = 'label',\n    Box = 'div'\n  } = styledComponents || false;\n  return /*#__PURE__*/React.createElement(Box, {\n    width: width,\n    className: validationMessage && touched || error ? `form-field consent error ${cssClass}` : `form-field consent ${cssClass}`,\n    style: {\n      display: hideField ? 'none' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Consent, {\n    className: \"checkboxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"label\",\n    className: `group-label ${labelPlacement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, label, label && isRequired ? /*#__PURE__*/React.createElement(\"abbr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }\n  }, \"*\") : null), descriptionPlacement === 'above' && description ? description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }\n  }, description) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, inputs.map((input, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: `input_${formId}_${id}_${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, i === 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: `input_${formId}_${id}_1`,\n    type: \"checkbox\",\n    name: customName || `input_${input.id}`,\n    value: 1,\n    required: isRequired // checked={!value}\n    ,\n    onChange: event => {\n      updateForm(event, field);\n      setTouched(id);\n      unsetError(id);\n    },\n    \"aria-invalid\": !!validationMessage && touched || !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"gfield_consent_label\",\n    htmlFor: customName || `input_${formId}_${id}_1`,\n    dangerouslySetInnerHTML: {\n      __html: checkboxLabel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), i === 1 && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `input_${input.id}`,\n    value: checkboxLabel,\n    className: \"gform_hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }), i === 2 && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `input_${input.id}`,\n    value: \"1\",\n    className: \"gform_hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }))), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, description)), (validationMessage && touched || error) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    id: `error_${formId}_${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, validationMessage || error)));\n});","map":{"version":3,"sources":["C:/Users/phil/OneDrive/Documents/reliant/code/narwhal-digital-reliant-wp/src/components/GravityForms/Fields/Consent.jsx"],"names":["React","field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","props","id","formId","label","inputs","cssClass","isRequired","description","descriptionPlacement","labelPlacement","width","customName","checkboxLabel","Consent","Label","Box","display","undefined","map","input","i","event","__html"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default ({\n  field,\n  value,\n  validationMessage,\n  touched,\n  setTouched,\n  hideField,\n  updateForm,\n  styledComponents,\n  error,\n  unsetError,\n  ...props\n}) => {\n  const {\n    id,\n    formId,\n    label,\n    inputs,\n    cssClass,\n    isRequired,\n    description,\n    descriptionPlacement,\n    labelPlacement,\n    width,\n    customName,\n    checkboxLabel,\n  } = field;\n\n  const { Consent = 'div', Label = 'label', Box = 'div' } = styledComponents || false;\n\n  return (\n    <Box\n      width={width}\n      className={\n        (validationMessage && touched) || error\n          ? `form-field consent error ${cssClass}`\n          : `form-field consent ${cssClass}`\n      }\n      style={{ display: hideField ? 'none' : undefined }}\n    >\n      <Consent className=\"checkboxes\">\n        <Label as=\"label\" className={`group-label ${labelPlacement}`}>\n          {label}\n          {label && isRequired ? <abbr>*</abbr> : null}\n        </Label>\n        {descriptionPlacement === 'above' && description ? (\n          description && <div className=\"description\">{description}</div>\n        ) : (\n          <React.Fragment>\n            {inputs.map((input, i) => (\n              <React.Fragment key={`input_${formId}_${id}_${i}`}>\n                {i === 0 && (\n                  <React.Fragment>\n                    <input\n                      id={`input_${formId}_${id}_1`}\n                      type=\"checkbox\"\n                      name={customName || `input_${input.id}`}\n                      value={1}\n                      required={isRequired}\n                      // checked={!value}\n                      onChange={(event) => {\n                        updateForm(event, field);\n                        setTouched(id);\n                        unsetError(id);\n                      }}\n                      aria-invalid={(!!validationMessage && touched) || !!error}\n                    />\n                    <label\n                      className=\"gfield_consent_label\"\n                      htmlFor={customName || `input_${formId}_${id}_1`}\n                      dangerouslySetInnerHTML={{ __html: checkboxLabel }}\n                    />\n                  </React.Fragment>\n                )}\n                {i === 1 && (\n                  <input\n                    type=\"hidden\"\n                    name={`input_${input.id}`}\n                    value={checkboxLabel}\n                    className=\"gform_hidden\"\n                  />\n                )}\n                {i === 2 && (\n                  <input\n                    type=\"hidden\"\n                    name={`input_${input.id}`}\n                    value=\"1\"\n                    className=\"gform_hidden\"\n                  />\n                )}\n              </React.Fragment>\n            ))}\n            {description && <div className=\"description\">{description}</div>}\n          </React.Fragment>\n        )}\n\n        {((validationMessage && touched) || error) && (\n          <span className=\"error-message\" id={`error_${formId}_${id}`}>\n            {validationMessage || error}\n          </span>\n        )}\n      </Consent>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}